{
  "contractName": "AutoAppealableArbitrator",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "disputes",
      "outputs": [
        {
          "name": "arbitrated",
          "type": "address"
        },
        {
          "name": "choices",
          "type": "uint256"
        },
        {
          "name": "fees",
          "type": "uint256"
        },
        {
          "name": "ruling",
          "type": "uint256"
        },
        {
          "name": "status",
          "type": "uint8"
        },
        {
          "name": "appealCost",
          "type": "uint256"
        },
        {
          "name": "appealPeriodStart",
          "type": "uint256"
        },
        {
          "name": "appealPeriodEnd",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x564a565d"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "inputs": [
        {
          "name": "_arbitrationPrice",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "_arbitrable",
          "type": "address"
        }
      ],
      "name": "DisputeCreation",
      "type": "event",
      "signature": "0x141dfc18aa6a56fc816f44f0e9e2f1ebc92b15ab167770e17db5b084c10ed995"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "_arbitrable",
          "type": "address"
        }
      ],
      "name": "AppealPossible",
      "type": "event",
      "signature": "0xa5d41b970d849372be1da1481ffd78d162bfe57a7aa2fe4e5fb73481fa5ac24f"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "_arbitrable",
          "type": "address"
        }
      ],
      "name": "AppealDecision",
      "type": "event",
      "signature": "0x9c9b64db9e130f48381bf697abf638e73117dbfbfd7a4484f2da3ba188f4187d"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_arbitrationPrice",
          "type": "uint256"
        }
      ],
      "name": "setArbitrationPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xffb43c48"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "arbitrationCost",
      "outputs": [
        {
          "name": "fee",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xf7434ea9"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "appealCost",
      "outputs": [
        {
          "name": "fee",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xf23f16e6"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_choices",
          "type": "uint256"
        },
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "createDispute",
      "outputs": [
        {
          "name": "disputeID",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function",
      "signature": "0xc13517e1"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "giveRuling",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xc97c4d5c"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "name": "_ruling",
          "type": "uint256"
        },
        {
          "name": "_appealCost",
          "type": "uint256"
        },
        {
          "name": "_timeToAppeal",
          "type": "uint256"
        }
      ],
      "name": "giveAppealableRuling",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x78e5effc"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "name": "_appealCost",
          "type": "uint256"
        }
      ],
      "name": "changeAppealFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x0688eef9"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "appeal",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function",
      "signature": "0x49912f88"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "executeRuling",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x8bb04875"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "disputeStatus",
      "outputs": [
        {
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x10f169e8"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "currentRuling",
      "outputs": [
        {
          "name": "ruling",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x1c3db16d"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "appealPeriod",
      "outputs": [
        {
          "name": "start",
          "type": "uint256"
        },
        {
          "name": "end",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xafe15cfb"
    }
  ],
  "bytecode": "0x608060405260008054600160a060020a0319163317905534801561002257600080fd5b506040516020806113448339810180604052602081101561004257600080fd5b50516001556112ee806100566000396000f3fe6080604052600436106100cf5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630688eef981146100d457806310f169e8146101065780631c3db16d1461015457806349912f8814610190578063564a565d1461023d57806378e5effc146102ce5780638bb048751461030a5780638da5cb5b14610334578063afe15cfb14610365578063c13517e1146103a8578063c97c4d5c14610455578063f23f16e614610485578063f7434ea91461053f578063ffb43c48146105f2575b600080fd5b3480156100e057600080fd5b50610104600480360360408110156100f757600080fd5b508035906020013561061c565b005b34801561011257600080fd5b506101306004803603602081101561012957600080fd5b5035610700565b6040518082600281111561014057fe5b60ff16815260200191505060405180910390f35b34801561016057600080fd5b5061017e6004803603602081101561017757600080fd5b50356107a9565b60408051918252519081900360200190f35b610104600480360360408110156101a657600080fd5b813591908101906040810160208201356401000000008111156101c857600080fd5b8201836020820111156101da57600080fd5b803590602001918460018302840111640100000000831117156101fc57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506107d3945050505050565b34801561024957600080fd5b506102676004803603602081101561026057600080fd5b50356109b4565b6040518089600160a060020a0316600160a060020a031681526020018881526020018781526020018681526020018560028111156102a157fe5b60ff1681526020018481526020018381526020018281526020019850505050505050505060405180910390f35b3480156102da57600080fd5b50610104600480360360808110156102f157600080fd5b5080359060208101359060408101359060600135610a16565b34801561031657600080fd5b506101046004803603602081101561032d57600080fd5b5035610bb0565b34801561034057600080fd5b50610349610d79565b60408051600160a060020a039092168252519081900360200190f35b34801561037157600080fd5b5061038f6004803603602081101561038857600080fd5b5035610d88565b6040805192835260208301919091528051918290030190f35b61017e600480360360408110156103be57600080fd5b813591908101906040810160208201356401000000008111156103e057600080fd5b8201836020820111156103f257600080fd5b8035906020019184600183028401116401000000008311171561041457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610dc0945050505050565b34801561046157600080fd5b506101046004803603604081101561047857600080fd5b5080359060200135610f07565b34801561049157600080fd5b5061017e600480360360408110156104a857600080fd5b813591908101906040810160208201356401000000008111156104ca57600080fd5b8201836020820111156104dc57600080fd5b803590602001918460018302840111640100000000831117156104fe57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611123945050505050565b34801561054b57600080fd5b5061017e6004803603602081101561056257600080fd5b81019060208101813564010000000081111561057d57600080fd5b82018360208201111561058f57600080fd5b803590602001918460018302840111640100000000831117156105b157600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061119e945050505050565b3480156105fe57600080fd5b506101046004803603602081101561061557600080fd5b50356111a5565b600054600160a060020a0316331461066c576040805160e560020a62461bcd02815260206004820181905260248201526000805160206112a3833981519152604482015290519081900360640190fd5b600060028381548110151561067d57fe5b6000918252602090912060089091020190506001600482015460ff1660028111156106a457fe5b146106f9576040805160e560020a62461bcd02815260206004820152601f60248201527f5468652064697370757465206d7573742062652061707065616c61626c652e00604482015290519081900360640190fd5b6005015550565b60008060028381548110151561071257fe5b6000918252602090912060089091020190506001600280548590811061073457fe5b600091825260209091206004600890920201015460ff16600281111561075657fe5b148015610767575080600701544210155b156107765760029150506107a4565b600280548490811061078457fe5b600091825260209091206004600890920201015460ff1691506107a49050565b919050565b60006002828154811015156107ba57fe5b9060005260206000209060080201600301549050919050565b81816107df8282611123565b34101561085c576040805160e560020a62461bcd02815260206004820152602560248201527f4e6f7420656e6f7567682045544820746f20636f7665722061707065616c206360448201527f6f7374732e000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600060028581548110151561086d57fe5b6000918252602090912060089091020190506001600482015460ff16600281111561089457fe5b146108e9576040805160e560020a62461bcd02815260206004820152601f60248201527f5468652064697370757465206d7573742062652061707065616c61626c652e00604482015290519081900360640190fd5b6007810154421061096a576040805160e560020a62461bcd02815260206004820152603a60248201527f5468652061707065616c206d757374206f63637572206265666f72652074686560448201527f20656e64206f66207468652061707065616c20706572696f642e000000000000606482015290519081900360840190fd5b6002810180543401905560048101805460ff19169055604051339086907f9c9b64db9e130f48381bf697abf638e73117dbfbfd7a4484f2da3ba188f4187d90600090a35050505050565b60028054829081106109c257fe5b600091825260209091206008909102018054600182015460028301546003840154600485015460058601546006870154600790970154600160a060020a03909616975093959294919360ff90911692909188565b600054600160a060020a03163314610a66576040805160e560020a62461bcd02815260206004820181905260248201526000805160206112a3833981519152604482015290519081900360640190fd5b6000600285815481101515610a7757fe5b9060005260206000209060080201905080600101548411151515610ae5576040805160e560020a62461bcd02815260206004820152600f60248201527f496e76616c69642072756c696e672e0000000000000000000000000000000000604482015290519081900360640190fd5b6000600482015460ff166002811115610afa57fe5b14610b75576040805160e560020a62461bcd02815260206004820152602c60248201527f5468652064697370757465206d7573742062652077616974696e6720666f722060448201527f6172626974726174696f6e2e0000000000000000000000000000000000000000606482015290519081900360840190fd5b6003810184905560048101805460ff19166001179055600581018390554260068201819055610ba490836111fa565b60079091015550505050565b6000600282815481101515610bc157fe5b6000918252602090912060089091020190506001600482015460ff166002811115610be857fe5b14610c3d576040805160e560020a62461bcd02815260206004820152601f60248201527f5468652064697370757465206d7573742062652061707065616c61626c652e00604482015290519081900360640190fd5b6007810154421015610cbf576040805160e560020a62461bcd02815260206004820152603f60248201527f5468652064697370757465206d7573742062652065786563757465642061667460448201527f6572206974732061707065616c20706572696f642068617320656e6465642e00606482015290519081900360840190fd5b60048101805460ff1916600290811790915581015460405133916108fc811502916000818181858888f1505083546003850154604080517f311a6c5600000000000000000000000000000000000000000000000000000000815260048101899052602481019290925251600160a060020a03909216945063311a6c569350604480820193506000929182900301818387803b158015610d5d57600080fd5b505af1158015610d71573d6000803e3d6000fd5b505050505050565b600054600160a060020a031681565b6000806000600284815481101515610d9c57fe5b90600052602060002090600802019050806006015481600701549250925050915091565b6000610dcc8383611219565b50600160026101006040519081016040528033600160a060020a031681526020018681526020013481526020016000815260200160006002811115610e0d57fe5b8152600060208083018290526040808401839052606093840183905285546001808201808955978552938390208651600890920201805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039092169190911781559185015182840155840151600280830191909155928401516003820155608084015160048201805492949193909260ff1916918490811115610eaa57fe5b021790555060a0820151600582015560c0820151600682015560e0909101516007909101556040519190039150339082907f141dfc18aa6a56fc816f44f0e9e2f1ebc92b15ab167770e17db5b084c10ed99590600090a392915050565b600054600160a060020a03163314610f57576040805160e560020a62461bcd02815260206004820181905260248201526000805160206112a3833981519152604482015290519081900360640190fd5b6000600283815481101515610f6857fe5b9060005260206000209060080201905080600101548211151515610fd6576040805160e560020a62461bcd02815260206004820152600f60248201527f496e76616c69642072756c696e672e0000000000000000000000000000000000604482015290519081900360640190fd5b6000600482015460ff166002811115610feb57fe5b14611066576040805160e560020a62461bcd02815260206004820152602c60248201527f5468652064697370757465206d7573742062652077616974696e6720666f722060448201527f6172626974726174696f6e2e0000000000000000000000000000000000000000606482015290519081900360840190fd5b6003810182905560048101805460ff1916600290811790915581015460405133916108fc811502916000818181858888f150508354604080517f311a6c5600000000000000000000000000000000000000000000000000000000815260048101899052602481018890529051600160a060020a03909216945063311a6c569350604480820193506000929182900301818387803b15801561110657600080fd5b505af115801561111a573d6000803e3d6000fd5b50505050505050565b60008060028481548110151561113557fe5b6000918252602090912060089091020190506001600482015460ff16600281111561115c57fe5b141561116d57600501549050611198565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff915050611198565b505b92915050565b5060015490565b600054600160a060020a031633146111f5576040805160e560020a62461bcd02815260206004820181905260248201526000805160206112a3833981519152604482015290519081900360640190fd5b600155565b60008282018381101561120f57600019611211565b805b949350505050565b6000816112258161119e565b341015611196576040805160e560020a62461bcd02815260206004820152602a60248201527f4e6f7420656e6f7567682045544820746f20636f76657220617262697472617460448201527f696f6e20636f7374732e00000000000000000000000000000000000000000000606482015290519081900360840190fdfe43616e206f6e6c792062652063616c6c656420627920746865206f776e65722ea165627a7a72305820ea383c9fd266c246416a242b4a9654f03aedc6af532113e9cdc7542a0d0876190029",
  "deployedBytecode": "0x6080604052600436106100cf5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630688eef981146100d457806310f169e8146101065780631c3db16d1461015457806349912f8814610190578063564a565d1461023d57806378e5effc146102ce5780638bb048751461030a5780638da5cb5b14610334578063afe15cfb14610365578063c13517e1146103a8578063c97c4d5c14610455578063f23f16e614610485578063f7434ea91461053f578063ffb43c48146105f2575b600080fd5b3480156100e057600080fd5b50610104600480360360408110156100f757600080fd5b508035906020013561061c565b005b34801561011257600080fd5b506101306004803603602081101561012957600080fd5b5035610700565b6040518082600281111561014057fe5b60ff16815260200191505060405180910390f35b34801561016057600080fd5b5061017e6004803603602081101561017757600080fd5b50356107a9565b60408051918252519081900360200190f35b610104600480360360408110156101a657600080fd5b813591908101906040810160208201356401000000008111156101c857600080fd5b8201836020820111156101da57600080fd5b803590602001918460018302840111640100000000831117156101fc57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506107d3945050505050565b34801561024957600080fd5b506102676004803603602081101561026057600080fd5b50356109b4565b6040518089600160a060020a0316600160a060020a031681526020018881526020018781526020018681526020018560028111156102a157fe5b60ff1681526020018481526020018381526020018281526020019850505050505050505060405180910390f35b3480156102da57600080fd5b50610104600480360360808110156102f157600080fd5b5080359060208101359060408101359060600135610a16565b34801561031657600080fd5b506101046004803603602081101561032d57600080fd5b5035610bb0565b34801561034057600080fd5b50610349610d79565b60408051600160a060020a039092168252519081900360200190f35b34801561037157600080fd5b5061038f6004803603602081101561038857600080fd5b5035610d88565b6040805192835260208301919091528051918290030190f35b61017e600480360360408110156103be57600080fd5b813591908101906040810160208201356401000000008111156103e057600080fd5b8201836020820111156103f257600080fd5b8035906020019184600183028401116401000000008311171561041457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610dc0945050505050565b34801561046157600080fd5b506101046004803603604081101561047857600080fd5b5080359060200135610f07565b34801561049157600080fd5b5061017e600480360360408110156104a857600080fd5b813591908101906040810160208201356401000000008111156104ca57600080fd5b8201836020820111156104dc57600080fd5b803590602001918460018302840111640100000000831117156104fe57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611123945050505050565b34801561054b57600080fd5b5061017e6004803603602081101561056257600080fd5b81019060208101813564010000000081111561057d57600080fd5b82018360208201111561058f57600080fd5b803590602001918460018302840111640100000000831117156105b157600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061119e945050505050565b3480156105fe57600080fd5b506101046004803603602081101561061557600080fd5b50356111a5565b600054600160a060020a0316331461066c576040805160e560020a62461bcd02815260206004820181905260248201526000805160206112a3833981519152604482015290519081900360640190fd5b600060028381548110151561067d57fe5b6000918252602090912060089091020190506001600482015460ff1660028111156106a457fe5b146106f9576040805160e560020a62461bcd02815260206004820152601f60248201527f5468652064697370757465206d7573742062652061707065616c61626c652e00604482015290519081900360640190fd5b6005015550565b60008060028381548110151561071257fe5b6000918252602090912060089091020190506001600280548590811061073457fe5b600091825260209091206004600890920201015460ff16600281111561075657fe5b148015610767575080600701544210155b156107765760029150506107a4565b600280548490811061078457fe5b600091825260209091206004600890920201015460ff1691506107a49050565b919050565b60006002828154811015156107ba57fe5b9060005260206000209060080201600301549050919050565b81816107df8282611123565b34101561085c576040805160e560020a62461bcd02815260206004820152602560248201527f4e6f7420656e6f7567682045544820746f20636f7665722061707065616c206360448201527f6f7374732e000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600060028581548110151561086d57fe5b6000918252602090912060089091020190506001600482015460ff16600281111561089457fe5b146108e9576040805160e560020a62461bcd02815260206004820152601f60248201527f5468652064697370757465206d7573742062652061707065616c61626c652e00604482015290519081900360640190fd5b6007810154421061096a576040805160e560020a62461bcd02815260206004820152603a60248201527f5468652061707065616c206d757374206f63637572206265666f72652074686560448201527f20656e64206f66207468652061707065616c20706572696f642e000000000000606482015290519081900360840190fd5b6002810180543401905560048101805460ff19169055604051339086907f9c9b64db9e130f48381bf697abf638e73117dbfbfd7a4484f2da3ba188f4187d90600090a35050505050565b60028054829081106109c257fe5b600091825260209091206008909102018054600182015460028301546003840154600485015460058601546006870154600790970154600160a060020a03909616975093959294919360ff90911692909188565b600054600160a060020a03163314610a66576040805160e560020a62461bcd02815260206004820181905260248201526000805160206112a3833981519152604482015290519081900360640190fd5b6000600285815481101515610a7757fe5b9060005260206000209060080201905080600101548411151515610ae5576040805160e560020a62461bcd02815260206004820152600f60248201527f496e76616c69642072756c696e672e0000000000000000000000000000000000604482015290519081900360640190fd5b6000600482015460ff166002811115610afa57fe5b14610b75576040805160e560020a62461bcd02815260206004820152602c60248201527f5468652064697370757465206d7573742062652077616974696e6720666f722060448201527f6172626974726174696f6e2e0000000000000000000000000000000000000000606482015290519081900360840190fd5b6003810184905560048101805460ff19166001179055600581018390554260068201819055610ba490836111fa565b60079091015550505050565b6000600282815481101515610bc157fe5b6000918252602090912060089091020190506001600482015460ff166002811115610be857fe5b14610c3d576040805160e560020a62461bcd02815260206004820152601f60248201527f5468652064697370757465206d7573742062652061707065616c61626c652e00604482015290519081900360640190fd5b6007810154421015610cbf576040805160e560020a62461bcd02815260206004820152603f60248201527f5468652064697370757465206d7573742062652065786563757465642061667460448201527f6572206974732061707065616c20706572696f642068617320656e6465642e00606482015290519081900360840190fd5b60048101805460ff1916600290811790915581015460405133916108fc811502916000818181858888f1505083546003850154604080517f311a6c5600000000000000000000000000000000000000000000000000000000815260048101899052602481019290925251600160a060020a03909216945063311a6c569350604480820193506000929182900301818387803b158015610d5d57600080fd5b505af1158015610d71573d6000803e3d6000fd5b505050505050565b600054600160a060020a031681565b6000806000600284815481101515610d9c57fe5b90600052602060002090600802019050806006015481600701549250925050915091565b6000610dcc8383611219565b50600160026101006040519081016040528033600160a060020a031681526020018681526020013481526020016000815260200160006002811115610e0d57fe5b8152600060208083018290526040808401839052606093840183905285546001808201808955978552938390208651600890920201805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039092169190911781559185015182840155840151600280830191909155928401516003820155608084015160048201805492949193909260ff1916918490811115610eaa57fe5b021790555060a0820151600582015560c0820151600682015560e0909101516007909101556040519190039150339082907f141dfc18aa6a56fc816f44f0e9e2f1ebc92b15ab167770e17db5b084c10ed99590600090a392915050565b600054600160a060020a03163314610f57576040805160e560020a62461bcd02815260206004820181905260248201526000805160206112a3833981519152604482015290519081900360640190fd5b6000600283815481101515610f6857fe5b9060005260206000209060080201905080600101548211151515610fd6576040805160e560020a62461bcd02815260206004820152600f60248201527f496e76616c69642072756c696e672e0000000000000000000000000000000000604482015290519081900360640190fd5b6000600482015460ff166002811115610feb57fe5b14611066576040805160e560020a62461bcd02815260206004820152602c60248201527f5468652064697370757465206d7573742062652077616974696e6720666f722060448201527f6172626974726174696f6e2e0000000000000000000000000000000000000000606482015290519081900360840190fd5b6003810182905560048101805460ff1916600290811790915581015460405133916108fc811502916000818181858888f150508354604080517f311a6c5600000000000000000000000000000000000000000000000000000000815260048101899052602481018890529051600160a060020a03909216945063311a6c569350604480820193506000929182900301818387803b15801561110657600080fd5b505af115801561111a573d6000803e3d6000fd5b50505050505050565b60008060028481548110151561113557fe5b6000918252602090912060089091020190506001600482015460ff16600281111561115c57fe5b141561116d57600501549050611198565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff915050611198565b505b92915050565b5060015490565b600054600160a060020a031633146111f5576040805160e560020a62461bcd02815260206004820181905260248201526000805160206112a3833981519152604482015290519081900360640190fd5b600155565b60008282018381101561120f57600019611211565b805b949350505050565b6000816112258161119e565b341015611196576040805160e560020a62461bcd02815260206004820152602a60248201527f4e6f7420656e6f7567682045544820746f20636f76657220617262697472617460448201527f696f6e20636f7374732e00000000000000000000000000000000000000000000606482015290519081900360840190fdfe43616e206f6e6c792062652063616c6c656420627920746865206f776e65722ea165627a7a72305820ea383c9fd266c246416a242b4a9654f03aedc6af532113e9cdc7542a0d0876190029",
  "sourceMap": "7059:8709:0:-;;;7204:33;;;-1:-1:-1;;;;;;7204:33:0;7227:10;7204:33;;;8393:98;5:2:-1;;;;30:1;27;20:12;5:2;8393:98:0;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8393:98:0;8447:16;:36;7059:8709;;;;;;",
  "deployedSourceMap": "7059:8709:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12543:294;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12543:294:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12543:294:0;;;;;;;;;;14545:442;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14545:442:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14545:442:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15203:126;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15203:126:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15203:126:0;;;;;;;;;;;;;;;;;;;13096:552;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13096:552:0;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;13096:552:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;13096:552:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;13096:552:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;13096:552:0;;-1:-1:-1;13096:552:0;;-1:-1:-1;;;;;13096:552:0;8219:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8219:25:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8219:25:0;;;;;;;;-1:-1:-1;;;;;8219:25:0;-1:-1:-1;;;;;8219:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11743:599;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11743:599:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;11743:599:0;;;;;;;;;;;;;;;;;;13819:507;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13819:507:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13819:507:0;;;7204:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7204:33:0;;;;;;;;-1:-1:-1;;;;;7204:33:0;;;;;;;;;;;;;;15547:216;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15547:216:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15547:216:0;;;;;;;;;;;;;;;;;;;;;;;;;;10047:622;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10047:622:0;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;10047:622:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10047:622:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;10047:622:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;10047:622:0;;-1:-1:-1;10047:622:0;;-1:-1:-1;;;;;10047:622:0;10897:508;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10897:508:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10897:508:0;;;;;;;;9343:307;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9343:307:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9343:307:0;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;9343:307:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9343:307:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;9343:307:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;9343:307:0;;-1:-1:-1;9343:307:0;;-1:-1:-1;;;;;9343:307:0;8949:122;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8949:122:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8949:122:0;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;8949:122:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8949:122:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8949:122:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;8949:122:0;;-1:-1:-1;8949:122:0;;-1:-1:-1;;;;;8949:122:0;8646:127;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8646:127:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8646:127:0;;;12543:294;8164:5;;-1:-1:-1;;;;;8164:5:0;8152:10;:17;8144:62;;;;;-1:-1:-1;;;;;8144:62:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;8144:62:0;;;;;;;;;;;;;;;12633:23;12659:8;12668:10;12659:20;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12716:24:0;12698:14;;;;;;:42;;;;;;;;;12690:86;;;;;-1:-1:-1;;;;;12690:86:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;12797:18;;:32;-1:-1:-1;12543:294:0:o;14545:442::-;14605:20;14638:23;14664:8;14673:10;14664:20;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14728:24:0;14699:8;:20;;14708:10;;14699:20;;;;;;;;;;;;;;:27;:20;;;;;:27;;;;:53;;;;;;;;;:85;;;;;14761:7;:23;;;14756:3;:28;;14699:85;14695:284;;;14896:20;14889:27;;;;;14695:284;14952:8;:20;;14961:10;;14952:20;;;;;;;;;;;;;;:27;:20;;;;;:27;;;;;-1:-1:-1;14945:34:0;;-1:-1:-1;14945:34:0;14545:442;;;;:::o;15203:126::-;15263:11;15294:8;15303:10;15294:20;;;;;;;;;;;;;;;;;;;;:27;;;15287:34;;15203:126;;;:::o;13096:552::-;13178:10;13190;3406:34;3417:10;3429;3406;:34::i;:::-;3393:9;:47;;3385:97;;;;;-1:-1:-1;;;;;3385:97:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13221:23;13247:8;13256:10;13247:20;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13304:24:0;13286:14;;;;;;:42;;;;;;;;;13278:86;;;;;-1:-1:-1;;;;;13278:86:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;13389:23;;;;13383:3;:29;13375:100;;;;;-1:-1:-1;;;;;13375:100:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13496:12;;;:25;;13512:9;13496:25;;;13532:14;;;:38;;-1:-1:-1;;13532:38:0;;;13586:54;;13628:10;;13601;;13586:54;;-1:-1:-1;;13586:54:0;3493:1;13096:552;;;;:::o;8219:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8219:25:0;;;;-1:-1:-1;8219:25:0;;;;;;;;;;;;;;:::o;11743:599::-;8164:5;;-1:-1:-1;;;;;8164:5:0;8152:10;:17;8144:62;;;;;-1:-1:-1;;;;;8144:62:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;8144:62:0;;;;;;;;;;;;;;;11872:23;11898:8;11907:10;11898:20;;;;;;;;;;;;;;;;;;;;11872:46;;11948:7;:15;;;11937:7;:26;;11929:54;;;;;;;-1:-1:-1;;;;;11929:54:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;12020:21;12002:14;;;;;;:39;;;;;;;;;11994:96;;;;;-1:-1:-1;;;;;11994:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12111:14;;;:24;;;12146:14;;;:41;;-1:-1:-1;;12146:41:0;12163:24;12146:41;;;12198:18;;;:32;;;12269:3;12241:25;;;:31;;;12309:25;;12320:13;12309:10;:25::i;:::-;12283:23;;;;:51;-1:-1:-1;;;;11743:599:0:o;13819:507::-;13879:23;13905:8;13914:10;13905:20;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13962:24:0;13944:14;;;;;;:42;;;;;;;;;13936:86;;;;;-1:-1:-1;;;;;13936:86:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;14048:23;;;;14041:3;:30;;14033:106;;;;;-1:-1:-1;;;;;14033:106:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14160:14;;;:37;;-1:-1:-1;;14160:37:0;14177:20;14160:37;;;;;;14224:12;;;14208:29;;:10;;:29;;;;;-1:-1:-1;14208:29:0;-1:-1:-1;14208:29:0;14224:12;14208:10;:29;;-1:-1:-1;;14267:18:0;;14303:14;;;;14267:51;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14267:18:0;;;;-1:-1:-1;14267:23:0;;-1:-1:-1;14267:51:0;;;;;-1:-1:-1;14267:18:0;;:51;;;;;;:18;;:51;;;5:2:-1;;;;30:1;27;20:12;5:2;14267:51:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14267:51:0;;;;13819:507;;:::o;7204:33::-;;;-1:-1:-1;;;;;7204:33:0;;:::o;15547:216::-;15606:10;15618:8;15639:23;15665:8;15674:10;15665:20;;;;;;;;;;;;;;;;;;;;15639:46;;15704:7;:25;;;15731:7;:23;;;15696:59;;;;;15547:216;;;:::o;10047:622::-;10133:14;10160:41;10180:8;10190:10;10160:19;:41::i;:::-;;10545:1;10224:8;10238:303;;;;;;;;;10288:10;-1:-1:-1;;;;;10238:303:0;;;;;10323:8;10238:303;;;;10352:9;10238:303;;;;10384:1;10238:303;;;;10408:21;10238:303;;;;;;;;;;10456:1;10238:303;;;;;;;;;;;;;;;;;;;;;27:10:-1;;39:1;23:18;;;45:23;;;10224:318:0;;;;;;;;;;;;;;;;-1:-1:-1;;10224:318:0;-1:-1:-1;;;;;10224:318:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10224:318:0;;;;;;;;;;;;;;;-1:-1:-1;10224:318:0;;;;;;;;;;;;;;;;;;;;;;;;;;10607:54;;10224:322;;;;-1:-1:-1;10649:10:0;;10224:322;;10607:54;;-1:-1:-1;;10607:54:0;10047:622;;;;:::o;10897:508::-;8164:5;;-1:-1:-1;;;;;8164:5:0;8152:10;:17;8144:62;;;;;-1:-1:-1;;;;;8144:62:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;8144:62:0;;;;;;;;;;;;;;;10978:23;11004:8;11013:10;11004:20;;;;;;;;;;;;;;;;;;;;10978:46;;11054:7;:15;;;11043:7;:26;;11035:54;;;;;;;-1:-1:-1;;;;;11035:54:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;11126:21;11108:14;;;;;;:39;;;;;;;;;11100:96;;;;;-1:-1:-1;;;;;11100:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11209:14;;;:24;;;11244:14;;;:37;;-1:-1:-1;;11244:37:0;11261:20;11244:37;;;;;;11310:12;;;11294:29;;:10;;:29;;;;;-1:-1:-1;11294:29:0;-1:-1:-1;11294:29:0;11310:12;11294:10;:29;;-1:-1:-1;;11353:18:0;;:44;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11353:18:0;;;;-1:-1:-1;11353:23:0;;-1:-1:-1;11353:44:0;;;;;-1:-1:-1;11353:18:0;;:44;;;;;;:18;;:44;;;5:2:-1;;;;30:1;27;20:12;5:2;11353:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11353:44:0;;;;8208:1;10897:508;;:::o;9343:307::-;9425:8;9446:23;9472:8;9481:10;9472:20;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9525:24:0;9507:14;;;;;;:42;;;;;;;;;9503:139;;;9571:18;;;;-1:-1:-1;9564:25:0;;9503:139;7373:16;9618:24;;;;;9503:139;9343:307;;;;;;:::o;8949:122::-;-1:-1:-1;9047:16:0;;;8949:122::o;8646:127::-;8164:5;;-1:-1:-1;;;;;8164:5:0;8152:10;:17;8144:62;;;;;-1:-1:-1;;;;;8144:62:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;8144:62:0;;;;;;;;;;;;;;;8729:16;:36;8646:127::o;416:138::-;473:4;499:7;;;524;;;;:22;;-1:-1:-1;;524:22:0;;;534:1;524:22;517:29;416:138;-1:-1:-1;;;;416:138:0:o;4634:::-;4754:14;4726:10;3206:27;3222:10;3206:15;:27::i;:::-;3193:9;:40;;3185:95;;;;;-1:-1:-1;;;;;3185:95:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "/**\r\n *  @authors: [@mtsalenc]\r\n *  @reviewers: [@clesaege]\r\n *  @auditors: []\r\n *  @bounties: []\r\n *  @deployments: []\r\n */\r\n\r\npragma solidity ^0.5.0;\r\n\r\n\r\n/**\r\n * @title CappedMath\r\n * @dev Math operations with caps for under and overflow.\r\n */\r\nlibrary CappedMath {\r\n    uint constant private UINT_MAX = 2**256 - 1;\r\n\r\n    /**\r\n     * @dev Adds two unsigned integers, returns 2^256 - 1 on overflow.\r\n     */\r\n    function addCap(uint _a, uint _b) internal pure returns (uint) {\r\n        uint c = _a + _b;\r\n        return c >= _a ? c : UINT_MAX;\r\n    }\r\n\r\n    /**\r\n     * @dev Subtracts two integers, returns 0 on underflow.\r\n     */\r\n    function subCap(uint _a, uint _b) internal pure returns (uint) {\r\n        if (_b > _a)\r\n            return 0;\r\n        else\r\n            return _a - _b;\r\n    }\r\n\r\n    /**\r\n     * @dev Multiplies two unsigned integers, returns 2^256 - 1 on overflow.\r\n     */\r\n    function mulCap(uint _a, uint _b) internal pure returns (uint) {\r\n        // Gas optimization: this is cheaper than requiring '_a' not being zero, but the\r\n        // benefit is lost if '_b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n        if (_a == 0)\r\n            return 0;\r\n\r\n        uint c = _a * _b;\r\n        return c / _a == _b ? c : UINT_MAX;\r\n    }\r\n}\r\n\r\ncontract AutoArbitrable  {\r\n    AutoArbitrator public arbitrator;\r\n    bytes public arbitratorExtraData; // Extra data to require particular dispute and appeal behaviour.\r\n\r\n    modifier onlyArbitrator {require(msg.sender == address(arbitrator), \"Can only be called by the arbitrator.\"); _;}\r\n    \r\n    event Ruling(AutoArbitrator indexed _arbitrator, uint indexed _disputeID, uint _ruling);\r\n    \r\n    \r\n    /** @dev Constructor. Choose the arbitrator.\r\n     *  @param _arbitrator The arbitrator of the contract.\r\n     *  @param _arbitratorExtraData Extra data for the arbitrator.\r\n     */\r\n    constructor(AutoArbitrator _arbitrator, bytes memory _arbitratorExtraData) public {\r\n        arbitrator = _arbitrator;\r\n        arbitratorExtraData = _arbitratorExtraData;\r\n    }\r\n\r\n    /** @dev Give a ruling for a dispute. Must be called by the arbitrator.\r\n     *  The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\r\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\r\n     *  @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\r\n     */\r\n    function rule(uint _disputeID, uint _ruling) public onlyArbitrator {\r\n        emit Ruling(AutoArbitrator(msg.sender),_disputeID,_ruling);\r\n\r\n        executeRuling(_disputeID,_ruling);\r\n    }\r\n\r\n\r\n    /** @dev Execute a ruling of a dispute.\r\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\r\n     *  @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\r\n     */\r\n    function executeRuling(uint _disputeID, uint _ruling) internal;\r\n}\r\n\r\n\r\n\r\ncontract AutoArbitrator {\r\n\r\n    enum DisputeStatus {Waiting, Appealable, Solved}\r\n\r\n    modifier requireArbitrationFee(bytes memory _extraData) {\r\n        require(msg.value >= arbitrationCost(_extraData), \"Not enough ETH to cover arbitration costs.\");\r\n        _;\r\n    }\r\n    modifier requireAppealFee(uint _disputeID, bytes memory _extraData) {\r\n        require(msg.value >= appealCost(_disputeID, _extraData), \"Not enough ETH to cover appeal costs.\");\r\n        _;\r\n    }\r\n\r\n    /** @dev To be raised when a dispute is created.\r\n     *  @param _disputeID ID of the dispute.\r\n     *  @param _arbitrable The contract which created the dispute.\r\n     */\r\n    event DisputeCreation(uint indexed _disputeID, AutoArbitrable indexed _arbitrable);\r\n\r\n    /** @dev To be raised when a dispute can be appealed.\r\n     *  @param _disputeID ID of the dispute.\r\n     */\r\n    event AppealPossible(uint indexed _disputeID, AutoArbitrable indexed _arbitrable);\r\n\r\n    /** @dev To be raised when the current ruling is appealed.\r\n     *  @param _disputeID ID of the dispute.\r\n     *  @param _arbitrable The contract which created the dispute.\r\n     */\r\n    event AppealDecision(uint indexed _disputeID, AutoArbitrable indexed _arbitrable);\r\n\r\n    /** @dev Create a dispute. Must be called by the arbitrable contract.\r\n     *  Must be paid at least arbitrationCost(_extraData).\r\n     *  @param _choices Amount of choices the arbitrator can make in this dispute.\r\n     *  @param _extraData Can be used to give additional info on the dispute to be created.\r\n     *  @return disputeID ID of the dispute created.\r\n     */\r\n    function createDispute(uint _choices, bytes memory _extraData) public requireArbitrationFee(_extraData) payable returns(uint disputeID) {}\r\n\r\n    /** @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\r\n     *  @param _extraData Can be used to give additional info on the dispute to be created.\r\n     *  @return fee Amount to be paid.\r\n     */\r\n    function arbitrationCost(bytes memory _extraData) public view returns(uint fee);\r\n\r\n    /** @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\r\n     *  @param _disputeID ID of the dispute to be appealed.\r\n     *  @param _extraData Can be used to give extra info on the appeal.\r\n     */\r\n    function appeal(uint _disputeID, bytes memory _extraData) public requireAppealFee(_disputeID,_extraData) payable {\r\n        emit AppealDecision(_disputeID, AutoArbitrable(msg.sender));\r\n    }\r\n\r\n    /** @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\r\n     *  @param _disputeID ID of the dispute to be appealed.\r\n     *  @param _extraData Can be used to give additional info on the dispute to be created.\r\n     *  @return fee Amount to be paid.\r\n     */\r\n    function appealCost(uint _disputeID, bytes memory _extraData) public view returns(uint fee);\r\n\r\n    /** @dev Compute the start and end of the dispute's current or next appeal period, if possible.\r\n     *  @param _disputeID ID of the dispute.\r\n     *  @return The start and end of the period.\r\n     */\r\n    function appealPeriod(uint _disputeID) public view returns(uint start, uint end) {}\r\n\r\n    /** @dev Return the status of a dispute.\r\n     *  @param _disputeID ID of the dispute to rule.\r\n     *  @return status The status of the dispute.\r\n     */\r\n    function disputeStatus(uint _disputeID) public view returns(DisputeStatus status);\r\n\r\n    /** @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\r\n     *  @param _disputeID ID of the dispute.\r\n     *  @return ruling The ruling which has been given or the one which will be given if there is no appeal.\r\n     */\r\n    function currentRuling(uint _disputeID) public view returns(uint ruling);\r\n}\r\n\r\n\r\n\r\n\r\n \r\n\r\n \r\ncontract AutoAppealableArbitrator is AutoArbitrator {\r\n    using CappedMath for uint; // Operations bounded between 0 and 2**256 - 1.\r\n    \r\n    address public owner = msg.sender;\r\n    uint arbitrationPrice; // Not public because arbitrationCost already acts as an accessor.\r\n    uint constant NOT_PAYABLE_VALUE = (2**256 - 2) / 2; // High value to be sure that the appeal is too expensive.\r\n\r\n    struct Dispute {\r\n        AutoArbitrable arbitrated;  // The contract requiring arbitration.\r\n        uint choices;           // The amount of possible choices, 0 excluded.\r\n        uint fees;              // The total amount of fees collected by the arbitrator.\r\n        uint ruling;            // The current ruling.\r\n        DisputeStatus status;   // The status of the dispute.\r\n        uint appealCost;        // The cost to appeal. 0 before it is appealable.\r\n        uint appealPeriodStart; // The start of the appeal period. 0 before it is appealable.\r\n        uint appealPeriodEnd;   // The end of the appeal Period. 0 before it is appealable.\r\n    }\r\n\r\n    modifier onlyOwner {require(msg.sender==owner, \"Can only be called by the owner.\"); _;}\r\n\r\n    Dispute[] public disputes;\r\n\r\n    /** @dev Constructor. Set the initial arbitration price.\r\n     *  @param _arbitrationPrice Amount to be paid for arbitration.\r\n     */\r\n    constructor(uint _arbitrationPrice) public {\r\n        arbitrationPrice = _arbitrationPrice;\r\n    }\r\n\r\n    /** @dev Set the arbitration price. Only callable by the owner.\r\n     *  @param _arbitrationPrice Amount to be paid for arbitration.\r\n     */\r\n    function setArbitrationPrice(uint _arbitrationPrice) external onlyOwner {\r\n        arbitrationPrice = _arbitrationPrice;\r\n    }\r\n\r\n    /** @dev Cost of arbitration. Accessor to arbitrationPrice.\r\n     *  @param _extraData Not used by this contract.\r\n     *  @return fee Amount to be paid.\r\n     */\r\n    function arbitrationCost(bytes memory _extraData) public view returns(uint fee) {\r\n        return arbitrationPrice;\r\n    }\r\n\r\n    /** @dev Cost of appeal. If appeal is not possible, it's a high value which can never be paid.\r\n     *  @param _disputeID ID of the dispute to be appealed.\r\n     *  @param _extraData Not used by this contract.\r\n     *  @return fee Amount to be paid.\r\n     */\r\n    function appealCost(uint _disputeID, bytes memory _extraData) public view returns(uint fee) {\r\n        Dispute storage dispute = disputes[_disputeID];\r\n        if (dispute.status == DisputeStatus.Appealable)\r\n            return dispute.appealCost;\r\n        else\r\n            return NOT_PAYABLE_VALUE;\r\n    }\r\n\r\n    /** @dev Create a dispute. Must be called by the arbitrable contract.\r\n     *  Must be paid at least arbitrationCost().\r\n     *  @param _choices Amount of choices the arbitrator can make in this dispute. When ruling <= choices.\r\n     *  @param _extraData Can be used to give additional info on the dispute to be created.\r\n     *  @return disputeID ID of the dispute created.\r\n     */\r\n    function createDispute(uint _choices, bytes memory _extraData) public payable returns(uint disputeID) {\r\n        super.createDispute(_choices, _extraData);\r\n        disputeID = disputes.push(Dispute({\r\n            arbitrated: AutoArbitrable(msg.sender),\r\n            choices: _choices,\r\n            fees: msg.value,\r\n            ruling: 0,\r\n            status: DisputeStatus.Waiting,\r\n            appealCost: 0,\r\n            appealPeriodStart: 0,\r\n            appealPeriodEnd: 0\r\n            })) - 1; // Create the dispute and return its number.\r\n        emit DisputeCreation(disputeID, AutoArbitrable(msg.sender));\r\n    }\r\n    \r\n    /** @dev Give a ruling. UNTRUSTED.\r\n     *  @param _disputeID ID of the dispute to rule.\r\n     *  @param _ruling Ruling given by the arbitrator. Note that 0 means \"Not able/wanting to make a decision\".\r\n     */\r\n    function giveRuling(uint _disputeID, uint _ruling) external onlyOwner {\r\n        Dispute storage dispute = disputes[_disputeID];\r\n        require(_ruling <= dispute.choices, \"Invalid ruling.\");\r\n        require(dispute.status == DisputeStatus.Waiting, \"The dispute must be waiting for arbitration.\");\r\n\r\n        dispute.ruling = _ruling;\r\n        dispute.status = DisputeStatus.Solved;\r\n\r\n        msg.sender.send(dispute.fees); // Avoid blocking.\r\n        dispute.arbitrated.rule(_disputeID, _ruling);\r\n    }\r\n    \r\n    /** @dev Give an appealable ruling.\r\n     *  @param _disputeID ID of the dispute to rule.\r\n     *  @param _ruling Ruling given by the arbitrator. Note that 0 means \"Not able/wanting to make a decision\".\r\n     *  @param _appealCost The cost of appeal.\r\n     *  @param _timeToAppeal The time to appeal the ruling.\r\n     */\r\n    function giveAppealableRuling(uint _disputeID, uint _ruling, uint _appealCost, uint _timeToAppeal) external onlyOwner {\r\n        Dispute storage dispute = disputes[_disputeID];\r\n        require(_ruling <= dispute.choices, \"Invalid ruling.\");\r\n        require(dispute.status == DisputeStatus.Waiting, \"The dispute must be waiting for arbitration.\");\r\n        \r\n        dispute.ruling = _ruling;\r\n        dispute.status = DisputeStatus.Appealable;\r\n        dispute.appealCost = _appealCost;\r\n        dispute.appealPeriodStart = now;\r\n        dispute.appealPeriodEnd = now.addCap(_timeToAppeal);\r\n    }\r\n    \r\n    \r\n    /** @dev Change the appeal fee of a dispute.\r\n     *  @param _disputeID The ID of the dispute to update.\r\n     *  @param _appealCost The new cost to appeal this ruling.\r\n     */\r\n    function changeAppealFee(uint _disputeID, uint _appealCost) external onlyOwner {\r\n        Dispute storage dispute = disputes[_disputeID];\r\n        require(dispute.status == DisputeStatus.Appealable, \"The dispute must be appealable.\");\r\n        \r\n        dispute.appealCost = _appealCost;\r\n    }\r\n    \r\n    /** @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\r\n     *  @param _disputeID ID of the dispute to be appealed.\r\n     *  @param _extraData Can be used to give extra info on the appeal.\r\n     */\r\n    function appeal(uint _disputeID, bytes memory _extraData) public requireAppealFee(_disputeID, _extraData) payable {\r\n        Dispute storage dispute = disputes[_disputeID];\r\n        require(dispute.status == DisputeStatus.Appealable, \"The dispute must be appealable.\");\r\n        require(now < dispute.appealPeriodEnd, \"The appeal must occur before the end of the appeal period.\");\r\n        \r\n        dispute.fees += msg.value;\r\n        dispute.status = DisputeStatus.Waiting;\r\n        emit AppealDecision(_disputeID, AutoArbitrable(msg.sender));\r\n    }\r\n    \r\n    /** @dev Execute the ruling of a dispute after the appeal period has passed. UNTRUSTED.\r\n     *  @param _disputeID ID of the dispute to execute.\r\n     */\r\n    function executeRuling(uint _disputeID) external {\r\n        Dispute storage dispute = disputes[_disputeID];\r\n        require(dispute.status == DisputeStatus.Appealable, \"The dispute must be appealable.\");\r\n        require(now >= dispute.appealPeriodEnd, \"The dispute must be executed after its appeal period has ended.\");\r\n        \r\n        dispute.status = DisputeStatus.Solved;\r\n        msg.sender.send(dispute.fees); // Avoid blocking.\r\n        dispute.arbitrated.rule(_disputeID, dispute.ruling);\r\n    }\r\n\r\n    /** @dev Return the status of a dispute (in the sense of ERC792, not the Dispute property).\r\n     *  @param _disputeID ID of the dispute to rule.\r\n     *  @return status The status of the dispute.\r\n     */\r\n    function disputeStatus(uint _disputeID) public view returns(DisputeStatus status) {\r\n        Dispute storage dispute = disputes[_disputeID];\r\n        if (disputes[_disputeID].status==DisputeStatus.Appealable && now>=dispute.appealPeriodEnd) // If the appeal period is over, consider it solved even if rule has not been called yet.\r\n            return DisputeStatus.Solved;\r\n        else\r\n            return disputes[_disputeID].status;\r\n    }\r\n\r\n    /** @dev Return the ruling of a dispute.\r\n     *  @param _disputeID ID of the dispute.\r\n     *  @return ruling The ruling which have been given or which would be given if no appeals are raised.\r\n     */\r\n    function currentRuling(uint _disputeID) public view returns(uint ruling) {\r\n        return disputes[_disputeID].ruling;\r\n    }\r\n    \r\n    /** @dev Compute the start and end of the dispute's current or next appeal period, if possible.\r\n     *  @param _disputeID ID of the dispute.\r\n     *  @return The start and end of the period.\r\n     */\r\n    function appealPeriod(uint _disputeID) public view returns(uint start, uint end) {\r\n        Dispute storage dispute = disputes[_disputeID];\r\n        return (dispute.appealPeriodStart, dispute.appealPeriodEnd);\r\n    }\r\n\r\n}",
  "sourcePath": "C:/Users/Alessandro/solidity_work/myproject/contracts/AutoAppealableArbitrator.sol",
  "ast": {
    "absolutePath": "/C/Users/Alessandro/solidity_work/myproject/contracts/AutoAppealableArbitrator.sol",
    "exportedSymbols": {
      "AutoAppealableArbitrator": [
        797
      ],
      "AutoArbitrable": [
        157
      ],
      "AutoArbitrator": [
        288
      ],
      "CappedMath": [
        83
      ]
    },
    "id": 798,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "128:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title CappedMath\r\n@dev Math operations with caps for under and overflow.\r",
        "fullyImplemented": true,
        "id": 83,
        "linearizedBaseContracts": [
          83
        ],
        "name": "CappedMath",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 8,
            "name": "UINT_MAX",
            "nodeType": "VariableDeclaration",
            "scope": 83,
            "src": "274:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "274:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              },
              "id": 7,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                },
                "id": 5,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "32",
                  "id": 3,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "307:1:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "323536",
                  "id": 4,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "310:3:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_256_by_1",
                    "typeString": "int_const 256"
                  },
                  "value": "256"
                },
                "src": "307:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "-",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "31",
                "id": 6,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "316:1:0",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "307:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "479:75:0",
              "statements": [
                {
                  "assignments": [
                    18
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18,
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 30,
                      "src": "490:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 17,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "490:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 19,
                      "name": "_a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "499:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 20,
                      "name": "_b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "504:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "499:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "490:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 23,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "524:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 24,
                        "name": "_a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "529:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "524:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 27,
                      "name": "UINT_MAX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "538:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "524:22:0",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 26,
                      "name": "c",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "534:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 16,
                  "id": 29,
                  "nodeType": "Return",
                  "src": "517:29:0"
                }
              ]
            },
            "documentation": "@dev Adds two unsigned integers, returns 2^256 - 1 on overflow.\r",
            "id": 31,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "name": "_a",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "432:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "name": "_b",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "441:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "431:18:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "473:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "472:6:0"
            },
            "scope": 83,
            "src": "416:138:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "704:96:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "_b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "719:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 41,
                      "name": "_a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "724:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "719:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 45,
                        "name": "_a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "785:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 46,
                        "name": "_b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "790:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "785:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 39,
                    "id": 48,
                    "nodeType": "Return",
                    "src": "778:14:0"
                  },
                  "id": 49,
                  "nodeType": "IfStatement",
                  "src": "715:77:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "748:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 39,
                    "id": 44,
                    "nodeType": "Return",
                    "src": "741:8:0"
                  }
                }
              ]
            },
            "documentation": "@dev Subtracts two integers, returns 0 on underflow.\r",
            "id": 51,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "subCap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "name": "_a",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "657:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "name": "_b",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "666:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "666:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "656:18:0"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "698:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "698:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "697:6:0"
            },
            "scope": 83,
            "src": "641:159:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "967:349:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 60,
                      "name": "_a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "1204:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1210:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1204:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 65,
                  "nodeType": "IfStatement",
                  "src": "1200:34:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 63,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1233:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 59,
                    "id": 64,
                    "nodeType": "Return",
                    "src": "1226:8:0"
                  }
                },
                {
                  "assignments": [
                    67
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67,
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 81,
                      "src": "1247:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1247:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 71,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 68,
                      "name": "_a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "1256:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 69,
                      "name": "_b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "1261:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1256:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1247:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 72,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "1281:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 73,
                          "name": "_a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "1285:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1281:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 75,
                        "name": "_b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1291:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1281:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 78,
                      "name": "UINT_MAX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1300:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1281:27:0",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 77,
                      "name": "c",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "1296:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 59,
                  "id": 80,
                  "nodeType": "Return",
                  "src": "1274:34:0"
                }
              ]
            },
            "documentation": "@dev Multiplies two unsigned integers, returns 2^256 - 1 on overflow.\r",
            "id": 82,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mulCap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "name": "_a",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "920:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "name": "_b",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "929:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "919:18:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "961:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "961:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "960:6:0"
            },
            "scope": 83,
            "src": "904:412:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 798,
        "src": "248:1071:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 157,
        "linearizedBaseContracts": [
          157
        ],
        "name": "AutoArbitrable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 85,
            "name": "arbitrator",
            "nodeType": "VariableDeclaration",
            "scope": 157,
            "src": "1355:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AutoArbitrator_$288",
              "typeString": "contract AutoArbitrator"
            },
            "typeName": {
              "contractScope": null,
              "id": 84,
              "name": "AutoArbitrator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 288,
              "src": "1355:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                "typeString": "contract AutoArbitrator"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 87,
            "name": "arbitratorExtraData",
            "nodeType": "VariableDeclaration",
            "scope": 157,
            "src": "1394:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 86,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1394:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "1525:89:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 90,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15075,
                            "src": "1534:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1534:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 93,
                              "name": "arbitrator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "1556:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                                "typeString": "contract AutoArbitrator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                                "typeString": "contract AutoArbitrator"
                              }
                            ],
                            "id": 92,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1548:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1548:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1534:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e206f6e6c792062652063616c6c6564206279207468652061726269747261746f722e",
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1569:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8acf8e40ecf8fce4ddda0c11f538911b40cf953f2780b0c76f2e50588a0db13b",
                          "typeString": "literal_string \"Can only be called by the arbitrator.\""
                        },
                        "value": "Can only be called by the arbitrator."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8acf8e40ecf8fce4ddda0c11f538911b40cf953f2780b0c76f2e50588a0db13b",
                          "typeString": "literal_string \"Can only be called by the arbitrator.\""
                        }
                      ],
                      "id": 89,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "1526:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1526:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "1526:83:0"
                },
                {
                  "id": 99,
                  "nodeType": "PlaceholderStatement",
                  "src": "1611:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 101,
            "name": "onlyArbitrator",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1525:0:0"
            },
            "src": "1501:113:0",
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 109,
            "name": "Ruling",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "indexed": true,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "1639:34:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                    "typeString": "contract AutoArbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 102,
                    "name": "AutoArbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 288,
                    "src": "1639:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                      "typeString": "contract AutoArbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "1675:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1675:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 107,
                  "indexed": false,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "1700:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1700:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1638:75:0"
            },
            "src": "1626:88:0"
          },
          {
            "body": {
              "id": 124,
              "nodeType": "Block",
              "src": "2001:96:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 116,
                      "name": "arbitrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "2012:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                        "typeString": "contract AutoArbitrator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 117,
                      "name": "_arbitrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "2025:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                        "typeString": "contract AutoArbitrator"
                      }
                    },
                    "src": "2012:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                      "typeString": "contract AutoArbitrator"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "2012:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 120,
                      "name": "arbitratorExtraData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "2047:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 121,
                      "name": "_arbitratorExtraData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "2069:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2047:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "2047:42:0"
                }
              ]
            },
            "documentation": "@dev Constructor. Choose the arbitrator.\r\n @param _arbitrator The arbitrator of the contract.\r\n @param _arbitratorExtraData Extra data for the arbitrator.\r",
            "id": 125,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "1931:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                    "typeString": "contract AutoArbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 110,
                    "name": "AutoArbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 288,
                    "src": "1931:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                      "typeString": "contract AutoArbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "name": "_arbitratorExtraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "1959:33:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1959:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1930:63:0"
            },
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2001:0:0"
            },
            "scope": 157,
            "src": "1919:178:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "2572:123:0",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 136,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15075,
                              "src": "2610:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2610:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 135,
                          "name": "AutoArbitrator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 288,
                          "src": "2595:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AutoArbitrator_$288_$",
                            "typeString": "type(contract AutoArbitrator)"
                          }
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2595:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                          "typeString": "contract AutoArbitrator"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 139,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "2622:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "2633:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                          "typeString": "contract AutoArbitrator"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 134,
                      "name": "Ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "2588:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_AutoArbitrator_$288_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract AutoArbitrator,uint256,uint256)"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2588:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "EmitStatement",
                  "src": "2583:58:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 144,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "2668:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 145,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "2679:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 143,
                      "name": "executeRuling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "2654:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2654:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "2654:33:0"
                }
              ]
            },
            "documentation": "@dev Give a ruling for a dispute. Must be called by the arbitrator.\r\n The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\r\n @param _disputeID ID of the dispute in the Arbitrator contract.\r\n @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\r",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 132,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 131,
                  "name": "onlyArbitrator",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 101,
                  "src": "2557:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2557:14:0"
              }
            ],
            "name": "rule",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "2519:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2519:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "2536:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2536:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2518:31:0"
            },
            "returnParameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2572:0:0"
            },
            "scope": 157,
            "src": "2505:190:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Execute a ruling of a dispute.\r\n @param _disputeID ID of the dispute in the Arbitrator contract.\r\n @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\r",
            "id": 156,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "executeRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "2978:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2978:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "2995:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2995:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2977:31:0"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3017:0:0"
            },
            "scope": 157,
            "src": "2955:63:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 798,
        "src": "1323:1698:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 288,
        "linearizedBaseContracts": [
          288
        ],
        "name": "AutoArbitrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "AutoArbitrator.DisputeStatus",
            "id": 161,
            "members": [
              {
                "id": 158,
                "name": "Waiting",
                "nodeType": "EnumValue",
                "src": "3082:7:0"
              },
              {
                "id": 159,
                "name": "Appealable",
                "nodeType": "EnumValue",
                "src": "3091:10:0"
              },
              {
                "id": 160,
                "name": "Solved",
                "nodeType": "EnumValue",
                "src": "3103:6:0"
              }
            ],
            "name": "DisputeStatus",
            "nodeType": "EnumDefinition",
            "src": "3062:48:0"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "3174:126:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 166,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15075,
                            "src": "3193:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3193:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 169,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 163,
                              "src": "3222:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 168,
                            "name": "arbitrationCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 234,
                            "src": "3206:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (bytes memory) view returns (uint256)"
                            }
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3206:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3193:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f7567682045544820746f20636f766572206172626974726174696f6e20636f7374732e",
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3235:44:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs.\""
                        },
                        "value": "Not enough ETH to cover arbitration costs."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs.\""
                        }
                      ],
                      "id": 165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "3185:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3185:95:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "3185:95:0"
                },
                {
                  "id": 175,
                  "nodeType": "PlaceholderStatement",
                  "src": "3291:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 177,
            "name": "requireArbitrationFee",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "3149:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3149:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3148:25:0"
            },
            "src": "3118:182:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 195,
              "nodeType": "Block",
              "src": "3374:128:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 184,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15075,
                            "src": "3393:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3393:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 187,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 179,
                              "src": "3417:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 188,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 181,
                              "src": "3429:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 186,
                            "name": "appealCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "3406:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,bytes memory) view returns (uint256)"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3406:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3393:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f7567682045544820746f20636f7665722061707065616c20636f7374732e",
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3442:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48e4504850ba6c91b788fac6bc20c12a8accd4a118f5567e03230e22511612d3",
                          "typeString": "literal_string \"Not enough ETH to cover appeal costs.\""
                        },
                        "value": "Not enough ETH to cover appeal costs."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48e4504850ba6c91b788fac6bc20c12a8accd4a118f5567e03230e22511612d3",
                          "typeString": "literal_string \"Not enough ETH to cover appeal costs.\""
                        }
                      ],
                      "id": 183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "3385:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3385:97:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "3385:97:0"
                },
                {
                  "id": 194,
                  "nodeType": "PlaceholderStatement",
                  "src": "3493:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 196,
            "name": "requireAppealFee",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 196,
                  "src": "3332:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3332:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 181,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 196,
                  "src": "3349:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3349:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3331:42:0"
            },
            "src": "3306:196:0",
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "@dev To be raised when a dispute is created.\r\n @param _disputeID ID of the dispute.\r\n @param _arbitrable The contract which created the dispute.\r",
            "id": 202,
            "name": "DisputeCreation",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "3709:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3709:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "indexed": true,
                  "name": "_arbitrable",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "3734:34:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                    "typeString": "contract AutoArbitrable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 199,
                    "name": "AutoArbitrable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 157,
                    "src": "3734:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                      "typeString": "contract AutoArbitrable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3708:61:0"
            },
            "src": "3687:83:0"
          },
          {
            "anonymous": false,
            "documentation": "@dev To be raised when a dispute can be appealed.\r\n @param _disputeID ID of the dispute.\r",
            "id": 208,
            "name": "AppealPossible",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 204,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "3913:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3913:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "indexed": true,
                  "name": "_arbitrable",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "3938:34:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                    "typeString": "contract AutoArbitrable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 205,
                    "name": "AutoArbitrable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 157,
                    "src": "3938:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                      "typeString": "contract AutoArbitrable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3912:61:0"
            },
            "src": "3892:82:0"
          },
          {
            "anonymous": false,
            "documentation": "@dev To be raised when the current ruling is appealed.\r\n @param _disputeID ID of the dispute.\r\n @param _arbitrable The contract which created the dispute.\r",
            "id": 214,
            "name": "AppealDecision",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 210,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "4190:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4190:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 212,
                  "indexed": true,
                  "name": "_arbitrable",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "4215:34:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                    "typeString": "contract AutoArbitrable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 211,
                    "name": "AutoArbitrable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 157,
                    "src": "4215:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                      "typeString": "contract AutoArbitrable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4189:61:0"
            },
            "src": "4169:82:0"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "4770:2:0",
              "statements": []
            },
            "documentation": "@dev Create a dispute. Must be called by the arbitrable contract.\r\n Must be paid at least arbitrationCost(_extraData).\r\n @param _choices Amount of choices the arbitrator can make in this dispute.\r\n @param _extraData Can be used to give additional info on the dispute to be created.\r\n @return disputeID ID of the dispute created.\r",
            "id": 227,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 221,
                    "name": "_extraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 218,
                    "src": "4726:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 222,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 220,
                  "name": "requireArbitrationFee",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 177,
                  "src": "4704:21:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes_memory_ptr_$",
                    "typeString": "modifier (bytes memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4704:33:0"
              }
            ],
            "name": "createDispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 216,
                  "name": "_choices",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "4657:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4657:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 218,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "4672:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4672:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4656:40:0"
            },
            "returnParameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 224,
                  "name": "disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "4754:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4754:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4753:16:0"
            },
            "scope": 288,
            "src": "4634:138:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\r\n @param _extraData Can be used to give additional info on the dispute to be created.\r\n @return fee Amount to be paid.\r",
            "id": 234,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "arbitrationCost",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "5141:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5141:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5140:25:0"
            },
            "returnParameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 232,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "5186:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5186:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5185:10:0"
            },
            "scope": 288,
            "src": "5116:80:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 253,
              "nodeType": "Block",
              "src": "5564:78:0",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 246,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "5595:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 248,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15075,
                              "src": "5622:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5622:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 247,
                          "name": "AutoArbitrable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "5607:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AutoArbitrable_$157_$",
                            "typeString": "type(contract AutoArbitrable)"
                          }
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5607:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                          "typeString": "contract AutoArbitrable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                          "typeString": "contract AutoArbitrable"
                        }
                      ],
                      "id": 245,
                      "name": "AppealDecision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "5580:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_AutoArbitrable_$157_$returns$__$",
                        "typeString": "function (uint256,contract AutoArbitrable)"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5580:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 252,
                  "nodeType": "EmitStatement",
                  "src": "5575:59:0"
                }
              ]
            },
            "documentation": "@dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\r\n @param _disputeID ID of the dispute to be appealed.\r\n @param _extraData Can be used to give extra info on the appeal.\r",
            "id": 254,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 241,
                    "name": "_disputeID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 236,
                    "src": "5533:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 242,
                    "name": "_extraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 238,
                    "src": "5544:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 243,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 240,
                  "name": "requireAppealFee",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 196,
                  "src": "5516:16:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$_t_bytes_memory_ptr_$",
                    "typeString": "modifier (uint256,bytes memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5516:39:0"
              }
            ],
            "name": "appeal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 236,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 254,
                  "src": "5467:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5467:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 238,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 254,
                  "src": "5484:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5484:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5466:42:0"
            },
            "returnParameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5564:0:0"
            },
            "scope": 288,
            "src": "5451:191:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\r\n @param _disputeID ID of the dispute to be appealed.\r\n @param _extraData Can be used to give additional info on the dispute to be created.\r\n @return fee Amount to be paid.\r",
            "id": 263,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "appealCost",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 256,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "6061:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6061:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 258,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "6078:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6078:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6060:42:0"
            },
            "returnParameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 261,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "6123:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6123:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6122:10:0"
            },
            "scope": 288,
            "src": "6041:92:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 272,
              "nodeType": "Block",
              "src": "6428:2:0",
              "statements": []
            },
            "documentation": "@dev Compute the start and end of the dispute's current or next appeal period, if possible.\r\n @param _disputeID ID of the dispute.\r\n @return The start and end of the period.\r",
            "id": 273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appealPeriod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "6369:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6369:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6368:17:0"
            },
            "returnParameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 268,
                  "name": "start",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "6406:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6406:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 270,
                  "name": "end",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "6418:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6418:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6405:22:0"
            },
            "scope": 288,
            "src": "6347:83:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Return the status of a dispute.\r\n @param _disputeID ID of the dispute to rule.\r\n @return status The status of the dispute.\r",
            "id": 280,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "disputeStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "6621:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6621:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6620:17:0"
            },
            "returnParameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "6658:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DisputeStatus_$161",
                    "typeString": "enum AutoArbitrator.DisputeStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 277,
                    "name": "DisputeStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 161,
                    "src": "6658:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$161",
                      "typeString": "enum AutoArbitrator.DisputeStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6657:22:0"
            },
            "scope": 288,
            "src": "6598:82:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\r\n @param _disputeID ID of the dispute.\r\n @return ruling The ruling which has been given or the one which will be given if there is no appeal.\r",
            "id": 287,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "currentRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 287,
                  "src": "6988:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6988:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6987:17:0"
            },
            "returnParameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 285,
                  "name": "ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 287,
                  "src": "7025:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7025:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7024:13:0"
            },
            "scope": 288,
            "src": "6965:73:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 798,
        "src": "3029:4012:0"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 289,
              "name": "AutoArbitrator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 288,
              "src": "7096:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                "typeString": "contract AutoArbitrator"
              }
            },
            "id": 290,
            "nodeType": "InheritanceSpecifier",
            "src": "7096:14:0"
          }
        ],
        "contractDependencies": [
          288
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 797,
        "linearizedBaseContracts": [
          797,
          288
        ],
        "name": "AutoAppealableArbitrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 293,
            "libraryName": {
              "contractScope": null,
              "id": 291,
              "name": "CappedMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 83,
              "src": "7124:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedMath_$83",
                "typeString": "library CappedMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "7118:26:0",
            "typeName": {
              "id": 292,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7139:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 297,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 797,
            "src": "7204:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 294,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "7204:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "expression": {
                "argumentTypes": null,
                "id": 295,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 15075,
                "src": "7227:3:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 296,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "referencedDeclaration": null,
              "src": "7227:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 299,
            "name": "arbitrationPrice",
            "nodeType": "VariableDeclaration",
            "scope": 797,
            "src": "7244:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 298,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7244:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 309,
            "name": "NOT_PAYABLE_VALUE",
            "nodeType": "VariableDeclaration",
            "scope": 797,
            "src": "7339:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 300,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7339:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
                "typeString": "int_const 5789...(69 digits omitted)...9967"
              },
              "id": 308,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639934_by_1",
                      "typeString": "int_const 1157...(70 digits omitted)...9934"
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                        "typeString": "int_const 1157...(70 digits omitted)...9936"
                      },
                      "id": 303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7374:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "323536",
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7377:3:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_256_by_1",
                          "typeString": "int_const 256"
                        },
                        "value": "256"
                      },
                      "src": "7374:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                        "typeString": "int_const 1157...(70 digits omitted)...9936"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7383:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "7374:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639934_by_1",
                      "typeString": "int_const 1157...(70 digits omitted)...9934"
                    }
                  }
                ],
                "id": 306,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "7373:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639934_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9934"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "/",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "32",
                "id": 307,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7388:1:0",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2_by_1",
                  "typeString": "int_const 2"
                },
                "value": "2"
              },
              "src": "7373:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
                "typeString": "int_const 5789...(69 digits omitted)...9967"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "AutoAppealableArbitrator.Dispute",
            "id": 326,
            "members": [
              {
                "constant": false,
                "id": 311,
                "name": "arbitrated",
                "nodeType": "VariableDeclaration",
                "scope": 326,
                "src": "7483:25:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                  "typeString": "contract AutoArbitrable"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 310,
                  "name": "AutoArbitrable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 157,
                  "src": "7483:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                    "typeString": "contract AutoArbitrable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 313,
                "name": "choices",
                "nodeType": "VariableDeclaration",
                "scope": 326,
                "src": "7559:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 312,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "7559:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 315,
                "name": "fees",
                "nodeType": "VariableDeclaration",
                "scope": 326,
                "src": "7639:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 314,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "7639:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 317,
                "name": "ruling",
                "nodeType": "VariableDeclaration",
                "scope": 326,
                "src": "7729:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 316,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "7729:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 319,
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 326,
                "src": "7785:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_DisputeStatus_$161",
                  "typeString": "enum AutoArbitrator.DisputeStatus"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 318,
                  "name": "DisputeStatus",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 161,
                  "src": "7785:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DisputeStatus_$161",
                    "typeString": "enum AutoArbitrator.DisputeStatus"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 321,
                "name": "appealCost",
                "nodeType": "VariableDeclaration",
                "scope": 326,
                "src": "7848:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 320,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "7848:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 323,
                "name": "appealPeriodStart",
                "nodeType": "VariableDeclaration",
                "scope": 326,
                "src": "7931:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 322,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "7931:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 325,
                "name": "appealPeriodEnd",
                "nodeType": "VariableDeclaration",
                "scope": 326,
                "src": "8026:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 324,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "8026:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Dispute",
            "nodeType": "StructDefinition",
            "scope": 797,
            "src": "7457:659:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 337,
              "nodeType": "Block",
              "src": "8143:68:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 329,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15075,
                            "src": "8152:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8152:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 331,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 297,
                          "src": "8164:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8152:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e206f6e6c792062652063616c6c656420627920746865206f776e65722e",
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8171:34:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf33d29683e5562cfb7e5d7016dc68533d604c99c45e8c622ac0ad8361611bfa",
                          "typeString": "literal_string \"Can only be called by the owner.\""
                        },
                        "value": "Can only be called by the owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf33d29683e5562cfb7e5d7016dc68533d604c99c45e8c622ac0ad8361611bfa",
                          "typeString": "literal_string \"Can only be called by the owner.\""
                        }
                      ],
                      "id": 328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "8144:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8144:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "8144:62:0"
                },
                {
                  "id": 336,
                  "nodeType": "PlaceholderStatement",
                  "src": "8208:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 338,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8143:0:0"
            },
            "src": "8124:87:0",
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 341,
            "name": "disputes",
            "nodeType": "VariableDeclaration",
            "scope": 797,
            "src": "8219:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
              "typeString": "struct AutoAppealableArbitrator.Dispute[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 339,
                "name": "Dispute",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 326,
                "src": "8219:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                  "typeString": "struct AutoAppealableArbitrator.Dispute"
                }
              },
              "id": 340,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "8219:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage_ptr",
                "typeString": "struct AutoAppealableArbitrator.Dispute[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 350,
              "nodeType": "Block",
              "src": "8436:55:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 346,
                      "name": "arbitrationPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "8447:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 347,
                      "name": "_arbitrationPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "8466:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8447:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 349,
                  "nodeType": "ExpressionStatement",
                  "src": "8447:36:0"
                }
              ]
            },
            "documentation": "@dev Constructor. Set the initial arbitration price.\r\n @param _arbitrationPrice Amount to be paid for arbitration.\r",
            "id": 351,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 343,
                  "name": "_arbitrationPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 351,
                  "src": "8405:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 342,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8405:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8404:24:0"
            },
            "returnParameters": {
              "id": 345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8436:0:0"
            },
            "scope": 797,
            "src": "8393:98:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 362,
              "nodeType": "Block",
              "src": "8718:55:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 358,
                      "name": "arbitrationPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "8729:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 359,
                      "name": "_arbitrationPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 353,
                      "src": "8748:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8729:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "8729:36:0"
                }
              ]
            },
            "documentation": "@dev Set the arbitration price. Only callable by the owner.\r\n @param _arbitrationPrice Amount to be paid for arbitration.\r",
            "id": 363,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 356,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 355,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 338,
                  "src": "8708:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8708:9:0"
              }
            ],
            "name": "setArbitrationPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 353,
                  "name": "_arbitrationPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "8675:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8675:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8674:24:0"
            },
            "returnParameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8718:0:0"
            },
            "scope": 797,
            "src": "8646:127:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 372,
              "nodeType": "Block",
              "src": "9029:42:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 370,
                    "name": "arbitrationPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 299,
                    "src": "9047:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 369,
                  "id": 371,
                  "nodeType": "Return",
                  "src": "9040:23:0"
                }
              ]
            },
            "documentation": "@dev Cost of arbitration. Accessor to arbitrationPrice.\r\n @param _extraData Not used by this contract.\r\n @return fee Amount to be paid.\r",
            "id": 373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "arbitrationCost",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 365,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "8974:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 364,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8974:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8973:25:0"
            },
            "returnParameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 368,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "9019:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9019:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9018:10:0"
            },
            "scope": 797,
            "src": "8949:122:0",
            "stateMutability": "view",
            "superFunction": 234,
            "visibility": "public"
          },
          {
            "body": {
              "id": 399,
              "nodeType": "Block",
              "src": "9435:215:0",
              "statements": [
                {
                  "assignments": [
                    383
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 383,
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "scope": 399,
                      "src": "9446:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                        "typeString": "struct AutoAppealableArbitrator.Dispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 382,
                        "name": "Dispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 326,
                        "src": "9446:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 387,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 384,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "9472:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                        "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                      }
                    },
                    "id": 386,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 385,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "9481:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9472:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$326_storage",
                      "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9446:46:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$161",
                      "typeString": "enum AutoArbitrator.DisputeStatus"
                    },
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 388,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 383,
                        "src": "9507:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 389,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 319,
                      "src": "9507:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 390,
                        "name": "DisputeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "9525:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                          "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                        }
                      },
                      "id": 391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Appealable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "9525:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "src": "9507:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 396,
                      "name": "NOT_PAYABLE_VALUE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "9625:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 381,
                    "id": 397,
                    "nodeType": "Return",
                    "src": "9618:24:0"
                  },
                  "id": 398,
                  "nodeType": "IfStatement",
                  "src": "9503:139:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 393,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 383,
                        "src": "9571:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 394,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "appealCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 321,
                      "src": "9571:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 381,
                    "id": 395,
                    "nodeType": "Return",
                    "src": "9564:25:0"
                  }
                }
              ]
            },
            "documentation": "@dev Cost of appeal. If appeal is not possible, it's a high value which can never be paid.\r\n @param _disputeID ID of the dispute to be appealed.\r\n @param _extraData Not used by this contract.\r\n @return fee Amount to be paid.\r",
            "id": 400,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appealCost",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 375,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "9363:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9363:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 377,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "9380:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9380:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9362:42:0"
            },
            "returnParameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 380,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "9425:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9425:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9424:10:0"
            },
            "scope": 797,
            "src": "9343:307:0",
            "stateMutability": "view",
            "superFunction": 263,
            "visibility": "public"
          },
          {
            "body": {
              "id": 447,
              "nodeType": "Block",
              "src": "10149:520:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 412,
                        "name": "_choices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "10180:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 413,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 404,
                        "src": "10190:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 409,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15095,
                        "src": "10160:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_AutoAppealableArbitrator_$797",
                          "typeString": "contract super AutoAppealableArbitrator"
                        }
                      },
                      "id": 411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createDispute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 227,
                      "src": "10160:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bytes memory) returns (uint256)"
                      }
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10160:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 415,
                  "nodeType": "ExpressionStatement",
                  "src": "10160:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 416,
                      "name": "disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 407,
                      "src": "10212:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 421,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 15075,
                                      "src": "10288:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 422,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "10288:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 420,
                                  "name": "AutoArbitrable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 157,
                                  "src": "10273:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AutoArbitrable_$157_$",
                                    "typeString": "type(contract AutoArbitrable)"
                                  }
                                },
                                "id": 423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10273:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                                  "typeString": "contract AutoArbitrable"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 424,
                                "name": "_choices",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 402,
                                "src": "10323:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 425,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15075,
                                  "src": "10352:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 426,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "10352:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10384:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 428,
                                  "name": "DisputeStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 161,
                                  "src": "10408:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                                    "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                                  }
                                },
                                "id": 429,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Waiting",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "10408:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DisputeStatus_$161",
                                  "typeString": "enum AutoArbitrator.DisputeStatus"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 430,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10456:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10491:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10524:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 419,
                              "name": "Dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 326,
                              "src": "10238:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Dispute_$326_storage_ptr_$",
                                "typeString": "type(struct AutoAppealableArbitrator.Dispute storage pointer)"
                              }
                            },
                            "id": 433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "arbitrated",
                              "choices",
                              "fees",
                              "ruling",
                              "status",
                              "appealCost",
                              "appealPeriodStart",
                              "appealPeriodEnd"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "10238:303:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$326_memory",
                              "typeString": "struct AutoAppealableArbitrator.Dispute memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Dispute_$326_memory",
                              "typeString": "struct AutoAppealableArbitrator.Dispute memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 417,
                            "name": "disputes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 341,
                            "src": "10224:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                            }
                          },
                          "id": 418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "push",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10224:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Dispute_$326_storage_$returns$_t_uint256_$",
                            "typeString": "function (struct AutoAppealableArbitrator.Dispute storage ref) returns (uint256)"
                          }
                        },
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10224:318:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10545:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "10224:322:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10212:334:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "10212:334:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 440,
                        "name": "disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 407,
                        "src": "10623:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 442,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15075,
                              "src": "10649:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10649:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 441,
                          "name": "AutoArbitrable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "10634:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AutoArbitrable_$157_$",
                            "typeString": "type(contract AutoArbitrable)"
                          }
                        },
                        "id": 444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10634:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                          "typeString": "contract AutoArbitrable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                          "typeString": "contract AutoArbitrable"
                        }
                      ],
                      "id": 439,
                      "name": "DisputeCreation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "10607:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_AutoArbitrable_$157_$returns$__$",
                        "typeString": "function (uint256,contract AutoArbitrable)"
                      }
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10607:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 446,
                  "nodeType": "EmitStatement",
                  "src": "10602:59:0"
                }
              ]
            },
            "documentation": "@dev Create a dispute. Must be called by the arbitrable contract.\r\n Must be paid at least arbitrationCost().\r\n @param _choices Amount of choices the arbitrator can make in this dispute. When ruling <= choices.\r\n @param _extraData Can be used to give additional info on the dispute to be created.\r\n @return disputeID ID of the dispute created.\r",
            "id": 448,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createDispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "name": "_choices",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "10070:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10070:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "10085:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10085:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10069:40:0"
            },
            "returnParameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "name": "disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "10133:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10133:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10132:16:0"
            },
            "scope": 797,
            "src": "10047:622:0",
            "stateMutability": "payable",
            "superFunction": 227,
            "visibility": "public"
          },
          {
            "body": {
              "id": 511,
              "nodeType": "Block",
              "src": "10967:438:0",
              "statements": [
                {
                  "assignments": [
                    458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 458,
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "scope": 511,
                      "src": "10978:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                        "typeString": "struct AutoAppealableArbitrator.Dispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 457,
                        "name": "Dispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 326,
                        "src": "10978:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 462,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 459,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "11004:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                        "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                      }
                    },
                    "id": 461,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 460,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 450,
                      "src": "11013:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11004:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$326_storage",
                      "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10978:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 464,
                          "name": "_ruling",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "11043:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 465,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "11054:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "choices",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 313,
                          "src": "11054:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11043:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642072756c696e672e",
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11071:17:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30a1efd31034a387a6ecd17203195002f6ea4f4b6af4307c4b0d6824823a3ea6",
                          "typeString": "literal_string \"Invalid ruling.\""
                        },
                        "value": "Invalid ruling."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30a1efd31034a387a6ecd17203195002f6ea4f4b6af4307c4b0d6824823a3ea6",
                          "typeString": "literal_string \"Invalid ruling.\""
                        }
                      ],
                      "id": 463,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "11035:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11035:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "11035:54:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$161",
                          "typeString": "enum AutoArbitrator.DisputeStatus"
                        },
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 472,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "11108:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 319,
                          "src": "11108:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum AutoArbitrator.DisputeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 474,
                            "name": "DisputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "11126:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                              "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                            }
                          },
                          "id": 475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Waiting",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11126:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum AutoArbitrator.DisputeStatus"
                          }
                        },
                        "src": "11108:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652064697370757465206d7573742062652077616974696e6720666f72206172626974726174696f6e2e",
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11149:46:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be7e436dedbe675f7876e6c490cf87bff3825085a91f95c94f14647ae13c8634",
                          "typeString": "literal_string \"The dispute must be waiting for arbitration.\""
                        },
                        "value": "The dispute must be waiting for arbitration."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be7e436dedbe675f7876e6c490cf87bff3825085a91f95c94f14647ae13c8634",
                          "typeString": "literal_string \"The dispute must be waiting for arbitration.\""
                        }
                      ],
                      "id": 471,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "11100:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11100:96:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 479,
                  "nodeType": "ExpressionStatement",
                  "src": "11100:96:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 480,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "11209:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 482,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ruling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 317,
                      "src": "11209:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 483,
                      "name": "_ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "11226:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11209:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 485,
                  "nodeType": "ExpressionStatement",
                  "src": "11209:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 486,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "11244:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 488,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 319,
                      "src": "11244:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 489,
                        "name": "DisputeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "11261:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                          "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                        }
                      },
                      "id": 490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Solved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11261:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "src": "11244:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$161",
                      "typeString": "enum AutoArbitrator.DisputeStatus"
                    }
                  },
                  "id": 492,
                  "nodeType": "ExpressionStatement",
                  "src": "11244:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 498,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 458,
                          "src": "11310:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                            "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                          }
                        },
                        "id": 499,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fees",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 315,
                        "src": "11310:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 493,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15075,
                          "src": "11294:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11294:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "send",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11294:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11294:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "11294:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 507,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 450,
                        "src": "11377:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 508,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "11389:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 502,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 458,
                          "src": "11353:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                            "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                          }
                        },
                        "id": 505,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arbitrated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 311,
                        "src": "11353:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                          "typeString": "contract AutoArbitrable"
                        }
                      },
                      "id": 506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rule",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 149,
                      "src": "11353:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11353:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 510,
                  "nodeType": "ExpressionStatement",
                  "src": "11353:44:0"
                }
              ]
            },
            "documentation": "@dev Give a ruling. UNTRUSTED.\r\n @param _disputeID ID of the dispute to rule.\r\n @param _ruling Ruling given by the arbitrator. Note that 0 means \"Not able/wanting to make a decision\".\r",
            "id": 512,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 455,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 454,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 338,
                  "src": "10957:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10957:9:0"
              }
            ],
            "name": "giveRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 450,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "10917:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10917:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 452,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "10934:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10934:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10916:31:0"
            },
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10967:0:0"
            },
            "scope": 797,
            "src": "10897:508:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 582,
              "nodeType": "Block",
              "src": "11861:481:0",
              "statements": [
                {
                  "assignments": [
                    526
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 526,
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "scope": 582,
                      "src": "11872:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                        "typeString": "struct AutoAppealableArbitrator.Dispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 525,
                        "name": "Dispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 326,
                        "src": "11872:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 530,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 527,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "11898:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                        "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                      }
                    },
                    "id": 529,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 528,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "11907:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11898:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$326_storage",
                      "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11872:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 532,
                          "name": "_ruling",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 516,
                          "src": "11937:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 533,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 526,
                            "src": "11948:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 534,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "choices",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 313,
                          "src": "11948:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11937:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642072756c696e672e",
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11965:17:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30a1efd31034a387a6ecd17203195002f6ea4f4b6af4307c4b0d6824823a3ea6",
                          "typeString": "literal_string \"Invalid ruling.\""
                        },
                        "value": "Invalid ruling."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30a1efd31034a387a6ecd17203195002f6ea4f4b6af4307c4b0d6824823a3ea6",
                          "typeString": "literal_string \"Invalid ruling.\""
                        }
                      ],
                      "id": 531,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "11929:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11929:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "11929:54:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$161",
                          "typeString": "enum AutoArbitrator.DisputeStatus"
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 540,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 526,
                            "src": "12002:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 541,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 319,
                          "src": "12002:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum AutoArbitrator.DisputeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 542,
                            "name": "DisputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "12020:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                              "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                            }
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Waiting",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12020:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum AutoArbitrator.DisputeStatus"
                          }
                        },
                        "src": "12002:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652064697370757465206d7573742062652077616974696e6720666f72206172626974726174696f6e2e",
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12043:46:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be7e436dedbe675f7876e6c490cf87bff3825085a91f95c94f14647ae13c8634",
                          "typeString": "literal_string \"The dispute must be waiting for arbitration.\""
                        },
                        "value": "The dispute must be waiting for arbitration."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be7e436dedbe675f7876e6c490cf87bff3825085a91f95c94f14647ae13c8634",
                          "typeString": "literal_string \"The dispute must be waiting for arbitration.\""
                        }
                      ],
                      "id": 539,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "11994:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11994:96:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "11994:96:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 548,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "12111:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 550,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ruling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 317,
                      "src": "12111:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 551,
                      "name": "_ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 516,
                      "src": "12128:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12111:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "12111:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 554,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "12146:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 556,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 319,
                      "src": "12146:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 557,
                        "name": "DisputeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "12163:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                          "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                        }
                      },
                      "id": 558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Appealable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "12163:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "src": "12146:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$161",
                      "typeString": "enum AutoArbitrator.DisputeStatus"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "12146:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 561,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "12198:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 563,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "appealCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 321,
                      "src": "12198:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 564,
                      "name": "_appealCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "12219:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12198:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 566,
                  "nodeType": "ExpressionStatement",
                  "src": "12198:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 567,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "12241:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 569,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "appealPeriodStart",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 323,
                      "src": "12241:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 570,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15077,
                      "src": "12269:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12241:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "12241:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 573,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "12283:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 575,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "appealPeriodEnd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 325,
                      "src": "12283:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 578,
                          "name": "_timeToAppeal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 520,
                          "src": "12320:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 576,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15077,
                          "src": "12309:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addCap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31,
                        "src": "12309:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12309:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12283:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "12283:51:0"
                }
              ]
            },
            "documentation": "@dev Give an appealable ruling.\r\n @param _disputeID ID of the dispute to rule.\r\n @param _ruling Ruling given by the arbitrator. Note that 0 means \"Not able/wanting to make a decision\".\r\n @param _appealCost The cost of appeal.\r\n @param _timeToAppeal The time to appeal the ruling.\r",
            "id": 583,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 523,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 522,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 338,
                  "src": "11851:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "11851:9:0"
              }
            ],
            "name": "giveAppealableRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 514,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "11773:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11773:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 516,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "11790:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11790:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 518,
                  "name": "_appealCost",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "11804:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11804:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 520,
                  "name": "_timeToAppeal",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "11822:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11822:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11772:69:0"
            },
            "returnParameters": {
              "id": 524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11861:0:0"
            },
            "scope": 797,
            "src": "11743:599:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 613,
              "nodeType": "Block",
              "src": "12622:215:0",
              "statements": [
                {
                  "assignments": [
                    593
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 593,
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "scope": 613,
                      "src": "12633:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                        "typeString": "struct AutoAppealableArbitrator.Dispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 592,
                        "name": "Dispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 326,
                        "src": "12633:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 597,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 594,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "12659:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                        "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                      }
                    },
                    "id": 596,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 595,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "12668:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12659:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$326_storage",
                      "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12633:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$161",
                          "typeString": "enum AutoArbitrator.DisputeStatus"
                        },
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 599,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 593,
                            "src": "12698:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 600,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 319,
                          "src": "12698:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum AutoArbitrator.DisputeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 601,
                            "name": "DisputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "12716:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                              "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                            }
                          },
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Appealable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12716:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum AutoArbitrator.DisputeStatus"
                          }
                        },
                        "src": "12698:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652064697370757465206d7573742062652061707065616c61626c652e",
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12742:33:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1",
                          "typeString": "literal_string \"The dispute must be appealable.\""
                        },
                        "value": "The dispute must be appealable."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1",
                          "typeString": "literal_string \"The dispute must be appealable.\""
                        }
                      ],
                      "id": 598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "12690:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12690:86:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 606,
                  "nodeType": "ExpressionStatement",
                  "src": "12690:86:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 607,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 593,
                        "src": "12797:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 609,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "appealCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 321,
                      "src": "12797:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 610,
                      "name": "_appealCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "12818:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12797:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 612,
                  "nodeType": "ExpressionStatement",
                  "src": "12797:32:0"
                }
              ]
            },
            "documentation": "@dev Change the appeal fee of a dispute.\r\n @param _disputeID The ID of the dispute to update.\r\n @param _appealCost The new cost to appeal this ruling.\r",
            "id": 614,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 590,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 589,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 338,
                  "src": "12612:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12612:9:0"
              }
            ],
            "name": "changeAppealFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 585,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "12568:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12568:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 587,
                  "name": "_appealCost",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "12585:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12585:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12567:35:0"
            },
            "returnParameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12622:0:0"
            },
            "scope": 797,
            "src": "12543:294:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 670,
              "nodeType": "Block",
              "src": "13210:438:0",
              "statements": [
                {
                  "assignments": [
                    626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 626,
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "scope": 670,
                      "src": "13221:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                        "typeString": "struct AutoAppealableArbitrator.Dispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 625,
                        "name": "Dispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 326,
                        "src": "13221:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 630,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 627,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "13247:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                        "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                      }
                    },
                    "id": 629,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 628,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 616,
                      "src": "13256:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13247:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$326_storage",
                      "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13221:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$161",
                          "typeString": "enum AutoArbitrator.DisputeStatus"
                        },
                        "id": 636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 632,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 626,
                            "src": "13286:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 633,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 319,
                          "src": "13286:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum AutoArbitrator.DisputeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 634,
                            "name": "DisputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "13304:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                              "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                            }
                          },
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Appealable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "13304:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum AutoArbitrator.DisputeStatus"
                          }
                        },
                        "src": "13286:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652064697370757465206d7573742062652061707065616c61626c652e",
                        "id": 637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13330:33:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1",
                          "typeString": "literal_string \"The dispute must be appealable.\""
                        },
                        "value": "The dispute must be appealable."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1",
                          "typeString": "literal_string \"The dispute must be appealable.\""
                        }
                      ],
                      "id": 631,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "13278:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13278:86:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 639,
                  "nodeType": "ExpressionStatement",
                  "src": "13278:86:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 641,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15077,
                          "src": "13383:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 642,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 626,
                            "src": "13389:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 643,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "appealPeriodEnd",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 325,
                          "src": "13389:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13383:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652061707065616c206d757374206f63637572206265666f72652074686520656e64206f66207468652061707065616c20706572696f642e",
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13414:60:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_785e30534d9aba417fa2efee2cef6269679d346420799f1ee0b4c1d9e65f4259",
                          "typeString": "literal_string \"The appeal must occur before the end of the appeal period.\""
                        },
                        "value": "The appeal must occur before the end of the appeal period."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_785e30534d9aba417fa2efee2cef6269679d346420799f1ee0b4c1d9e65f4259",
                          "typeString": "literal_string \"The appeal must occur before the end of the appeal period.\""
                        }
                      ],
                      "id": 640,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "13375:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13375:100:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 647,
                  "nodeType": "ExpressionStatement",
                  "src": "13375:100:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 648,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "13496:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 650,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 315,
                      "src": "13496:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 651,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15075,
                        "src": "13512:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13512:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13496:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 654,
                  "nodeType": "ExpressionStatement",
                  "src": "13496:25:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 655,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "13532:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 657,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 319,
                      "src": "13532:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 658,
                        "name": "DisputeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "13549:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                          "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                        }
                      },
                      "id": 659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Waiting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13549:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "src": "13532:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$161",
                      "typeString": "enum AutoArbitrator.DisputeStatus"
                    }
                  },
                  "id": 661,
                  "nodeType": "ExpressionStatement",
                  "src": "13532:38:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 663,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 616,
                        "src": "13601:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 665,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15075,
                              "src": "13628:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "13628:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 664,
                          "name": "AutoArbitrable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "13613:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AutoArbitrable_$157_$",
                            "typeString": "type(contract AutoArbitrable)"
                          }
                        },
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13613:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                          "typeString": "contract AutoArbitrable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                          "typeString": "contract AutoArbitrable"
                        }
                      ],
                      "id": 662,
                      "name": "AppealDecision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "13586:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_AutoArbitrable_$157_$returns$__$",
                        "typeString": "function (uint256,contract AutoArbitrable)"
                      }
                    },
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13586:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 669,
                  "nodeType": "EmitStatement",
                  "src": "13581:59:0"
                }
              ]
            },
            "documentation": "@dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\r\n @param _disputeID ID of the dispute to be appealed.\r\n @param _extraData Can be used to give extra info on the appeal.\r",
            "id": 671,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 621,
                    "name": "_disputeID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 616,
                    "src": "13178:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 622,
                    "name": "_extraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 618,
                    "src": "13190:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 623,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 620,
                  "name": "requireAppealFee",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 196,
                  "src": "13161:16:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$_t_bytes_memory_ptr_$",
                    "typeString": "modifier (uint256,bytes memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "13161:40:0"
              }
            ],
            "name": "appeal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 616,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 671,
                  "src": "13112:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13112:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 618,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 671,
                  "src": "13129:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13129:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13111:42:0"
            },
            "returnParameters": {
              "id": 624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13210:0:0"
            },
            "scope": 797,
            "src": "13096:552:0",
            "stateMutability": "payable",
            "superFunction": 254,
            "visibility": "public"
          },
          {
            "body": {
              "id": 725,
              "nodeType": "Block",
              "src": "13868:458:0",
              "statements": [
                {
                  "assignments": [
                    677
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 677,
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "scope": 725,
                      "src": "13879:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                        "typeString": "struct AutoAppealableArbitrator.Dispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 676,
                        "name": "Dispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 326,
                        "src": "13879:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 681,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 678,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "13905:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                        "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                      }
                    },
                    "id": 680,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 679,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 673,
                      "src": "13914:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13905:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$326_storage",
                      "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13879:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$161",
                          "typeString": "enum AutoArbitrator.DisputeStatus"
                        },
                        "id": 687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 683,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "13944:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 684,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 319,
                          "src": "13944:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum AutoArbitrator.DisputeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 685,
                            "name": "DisputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "13962:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                              "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                            }
                          },
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Appealable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "13962:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum AutoArbitrator.DisputeStatus"
                          }
                        },
                        "src": "13944:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652064697370757465206d7573742062652061707065616c61626c652e",
                        "id": 688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13988:33:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1",
                          "typeString": "literal_string \"The dispute must be appealable.\""
                        },
                        "value": "The dispute must be appealable."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1",
                          "typeString": "literal_string \"The dispute must be appealable.\""
                        }
                      ],
                      "id": 682,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "13936:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13936:86:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 690,
                  "nodeType": "ExpressionStatement",
                  "src": "13936:86:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 692,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15077,
                          "src": "14041:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 693,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "14048:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "appealPeriodEnd",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 325,
                          "src": "14048:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14041:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652064697370757465206d757374206265206578656375746564206166746572206974732061707065616c20706572696f642068617320656e6465642e",
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14073:65:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ffb16c8c515bb19f47e2c39c4abe69591900df2f6712a42bdbaeaacd81aaa88",
                          "typeString": "literal_string \"The dispute must be executed after its appeal period has ended.\""
                        },
                        "value": "The dispute must be executed after its appeal period has ended."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ffb16c8c515bb19f47e2c39c4abe69591900df2f6712a42bdbaeaacd81aaa88",
                          "typeString": "literal_string \"The dispute must be executed after its appeal period has ended.\""
                        }
                      ],
                      "id": 691,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "14033:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14033:106:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 698,
                  "nodeType": "ExpressionStatement",
                  "src": "14033:106:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 699,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "14160:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 701,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 319,
                      "src": "14160:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 702,
                        "name": "DisputeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "14177:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                          "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                        }
                      },
                      "id": 703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Solved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14177:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "src": "14160:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$161",
                      "typeString": "enum AutoArbitrator.DisputeStatus"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
                  "src": "14160:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 711,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "14224:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                            "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                          }
                        },
                        "id": 712,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fees",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 315,
                        "src": "14224:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 706,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15075,
                          "src": "14208:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "14208:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "send",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14208:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14208:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 714,
                  "nodeType": "ExpressionStatement",
                  "src": "14208:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 720,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 673,
                        "src": "14291:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 721,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "14303:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                            "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                          }
                        },
                        "id": 722,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ruling",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 317,
                        "src": "14303:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 715,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "14267:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                            "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                          }
                        },
                        "id": 718,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arbitrated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 311,
                        "src": "14267:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                          "typeString": "contract AutoArbitrable"
                        }
                      },
                      "id": 719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rule",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 149,
                      "src": "14267:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14267:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 724,
                  "nodeType": "ExpressionStatement",
                  "src": "14267:51:0"
                }
              ]
            },
            "documentation": "@dev Execute the ruling of a dispute after the appeal period has passed. UNTRUSTED.\r\n @param _disputeID ID of the dispute to execute.\r",
            "id": 726,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 673,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 726,
                  "src": "13842:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 672,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13842:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13841:17:0"
            },
            "returnParameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13868:0:0"
            },
            "scope": 797,
            "src": "13819:507:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 760,
              "nodeType": "Block",
              "src": "14627:360:0",
              "statements": [
                {
                  "assignments": [
                    734
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 734,
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "scope": 760,
                      "src": "14638:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                        "typeString": "struct AutoAppealableArbitrator.Dispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 733,
                        "name": "Dispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 326,
                        "src": "14638:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 738,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 735,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "14664:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                        "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                      }
                    },
                    "id": 737,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 736,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 728,
                      "src": "14673:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14664:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$326_storage",
                      "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14638:46:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      },
                      "id": 745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 739,
                            "name": "disputes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 341,
                            "src": "14699:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                            }
                          },
                          "id": 741,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 740,
                            "name": "_disputeID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 728,
                            "src": "14708:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14699:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$326_storage",
                            "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                          }
                        },
                        "id": 742,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "status",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 319,
                        "src": "14699:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$161",
                          "typeString": "enum AutoArbitrator.DisputeStatus"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 743,
                          "name": "DisputeStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "14728:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                            "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                          }
                        },
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Appealable",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "14728:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$161",
                          "typeString": "enum AutoArbitrator.DisputeStatus"
                        }
                      },
                      "src": "14699:53:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 746,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15077,
                        "src": "14756:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 747,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 734,
                          "src": "14761:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                            "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                          }
                        },
                        "id": 748,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "appealPeriodEnd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 325,
                        "src": "14761:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14756:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14699:85:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 754,
                          "name": "disputes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 341,
                          "src": "14952:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                            "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                          }
                        },
                        "id": 756,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 755,
                          "name": "_disputeID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 728,
                          "src": "14961:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14952:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                        }
                      },
                      "id": 757,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 319,
                      "src": "14952:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "functionReturnParameters": 732,
                    "id": 758,
                    "nodeType": "Return",
                    "src": "14945:34:0"
                  },
                  "id": 759,
                  "nodeType": "IfStatement",
                  "src": "14695:284:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 751,
                        "name": "DisputeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "14896:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                          "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                        }
                      },
                      "id": 752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Solved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14896:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "functionReturnParameters": 732,
                    "id": 753,
                    "nodeType": "Return",
                    "src": "14889:27:0"
                  }
                }
              ]
            },
            "documentation": "@dev Return the status of a dispute (in the sense of ERC792, not the Dispute property).\r\n @param _disputeID ID of the dispute to rule.\r\n @return status The status of the dispute.\r",
            "id": 761,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disputeStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 728,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 761,
                  "src": "14568:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 727,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14568:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14567:17:0"
            },
            "returnParameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 731,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 761,
                  "src": "14605:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DisputeStatus_$161",
                    "typeString": "enum AutoArbitrator.DisputeStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 730,
                    "name": "DisputeStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 161,
                    "src": "14605:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$161",
                      "typeString": "enum AutoArbitrator.DisputeStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14604:22:0"
            },
            "scope": 797,
            "src": "14545:442:0",
            "stateMutability": "view",
            "superFunction": 280,
            "visibility": "public"
          },
          {
            "body": {
              "id": 773,
              "nodeType": "Block",
              "src": "15276:53:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 768,
                        "name": "disputes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "15294:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                        }
                      },
                      "id": 770,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 769,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "15303:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "15294:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$326_storage",
                        "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "ruling",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 317,
                    "src": "15294:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 767,
                  "id": 772,
                  "nodeType": "Return",
                  "src": "15287:34:0"
                }
              ]
            },
            "documentation": "@dev Return the ruling of a dispute.\r\n @param _disputeID ID of the dispute.\r\n @return ruling The ruling which have been given or which would be given if no appeals are raised.\r",
            "id": 774,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "currentRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 763,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "15226:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15226:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15225:17:0"
            },
            "returnParameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 766,
                  "name": "ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "15263:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15263:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15262:13:0"
            },
            "scope": 797,
            "src": "15203:126:0",
            "stateMutability": "view",
            "superFunction": 287,
            "visibility": "public"
          },
          {
            "body": {
              "id": 795,
              "nodeType": "Block",
              "src": "15628:135:0",
              "statements": [
                {
                  "assignments": [
                    784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 784,
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "scope": 795,
                      "src": "15639:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                        "typeString": "struct AutoAppealableArbitrator.Dispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 783,
                        "name": "Dispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 326,
                        "src": "15639:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 788,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 785,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "15665:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                        "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                      }
                    },
                    "id": 787,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 786,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 776,
                      "src": "15674:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15665:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$326_storage",
                      "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15639:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 789,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "15704:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                            "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                          }
                        },
                        "id": 790,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "appealPeriodStart",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 323,
                        "src": "15704:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 791,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "15731:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                            "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                          }
                        },
                        "id": 792,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "appealPeriodEnd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 325,
                        "src": "15731:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 793,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "15703:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 782,
                  "id": 794,
                  "nodeType": "Return",
                  "src": "15696:59:0"
                }
              ]
            },
            "documentation": "@dev Compute the start and end of the dispute's current or next appeal period, if possible.\r\n @param _disputeID ID of the dispute.\r\n @return The start and end of the period.\r",
            "id": 796,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appealPeriod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 776,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "15569:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15569:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15568:17:0"
            },
            "returnParameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 779,
                  "name": "start",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "15606:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15606:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 781,
                  "name": "end",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "15618:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 780,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15618:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15605:22:0"
            },
            "scope": 797,
            "src": "15547:216:0",
            "stateMutability": "view",
            "superFunction": 273,
            "visibility": "public"
          }
        ],
        "scope": 798,
        "src": "7059:8709:0"
      }
    ],
    "src": "128:15640:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Alessandro/solidity_work/myproject/contracts/AutoAppealableArbitrator.sol",
    "exportedSymbols": {
      "AutoAppealableArbitrator": [
        797
      ],
      "AutoArbitrable": [
        157
      ],
      "AutoArbitrator": [
        288
      ],
      "CappedMath": [
        83
      ]
    },
    "id": 798,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "128:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title CappedMath\r\n@dev Math operations with caps for under and overflow.\r",
        "fullyImplemented": true,
        "id": 83,
        "linearizedBaseContracts": [
          83
        ],
        "name": "CappedMath",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 8,
            "name": "UINT_MAX",
            "nodeType": "VariableDeclaration",
            "scope": 83,
            "src": "274:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "274:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              },
              "id": 7,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                },
                "id": 5,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "32",
                  "id": 3,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "307:1:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "323536",
                  "id": 4,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "310:3:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_256_by_1",
                    "typeString": "int_const 256"
                  },
                  "value": "256"
                },
                "src": "307:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "-",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "31",
                "id": 6,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "316:1:0",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "307:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "479:75:0",
              "statements": [
                {
                  "assignments": [
                    18
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18,
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 30,
                      "src": "490:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 17,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "490:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 19,
                      "name": "_a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "499:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 20,
                      "name": "_b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "504:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "499:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "490:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 23,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "524:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 24,
                        "name": "_a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "529:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "524:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 27,
                      "name": "UINT_MAX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "538:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "524:22:0",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 26,
                      "name": "c",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "534:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 16,
                  "id": 29,
                  "nodeType": "Return",
                  "src": "517:29:0"
                }
              ]
            },
            "documentation": "@dev Adds two unsigned integers, returns 2^256 - 1 on overflow.\r",
            "id": 31,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "name": "_a",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "432:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "name": "_b",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "441:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "431:18:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "473:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "472:6:0"
            },
            "scope": 83,
            "src": "416:138:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "704:96:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "_b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "719:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 41,
                      "name": "_a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "724:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "719:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 45,
                        "name": "_a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "785:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 46,
                        "name": "_b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "790:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "785:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 39,
                    "id": 48,
                    "nodeType": "Return",
                    "src": "778:14:0"
                  },
                  "id": 49,
                  "nodeType": "IfStatement",
                  "src": "715:77:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "748:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 39,
                    "id": 44,
                    "nodeType": "Return",
                    "src": "741:8:0"
                  }
                }
              ]
            },
            "documentation": "@dev Subtracts two integers, returns 0 on underflow.\r",
            "id": 51,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "subCap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "name": "_a",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "657:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "name": "_b",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "666:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "666:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "656:18:0"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "698:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "698:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "697:6:0"
            },
            "scope": 83,
            "src": "641:159:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "967:349:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 60,
                      "name": "_a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "1204:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1210:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1204:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 65,
                  "nodeType": "IfStatement",
                  "src": "1200:34:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 63,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1233:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 59,
                    "id": 64,
                    "nodeType": "Return",
                    "src": "1226:8:0"
                  }
                },
                {
                  "assignments": [
                    67
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67,
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 81,
                      "src": "1247:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1247:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 71,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 68,
                      "name": "_a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "1256:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 69,
                      "name": "_b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "1261:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1256:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1247:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 72,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "1281:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 73,
                          "name": "_a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "1285:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1281:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 75,
                        "name": "_b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1291:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1281:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 78,
                      "name": "UINT_MAX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1300:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1281:27:0",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 77,
                      "name": "c",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "1296:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 59,
                  "id": 80,
                  "nodeType": "Return",
                  "src": "1274:34:0"
                }
              ]
            },
            "documentation": "@dev Multiplies two unsigned integers, returns 2^256 - 1 on overflow.\r",
            "id": 82,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mulCap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "name": "_a",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "920:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "name": "_b",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "929:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "919:18:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "961:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "961:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "960:6:0"
            },
            "scope": 83,
            "src": "904:412:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 798,
        "src": "248:1071:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 157,
        "linearizedBaseContracts": [
          157
        ],
        "name": "AutoArbitrable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 85,
            "name": "arbitrator",
            "nodeType": "VariableDeclaration",
            "scope": 157,
            "src": "1355:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AutoArbitrator_$288",
              "typeString": "contract AutoArbitrator"
            },
            "typeName": {
              "contractScope": null,
              "id": 84,
              "name": "AutoArbitrator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 288,
              "src": "1355:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                "typeString": "contract AutoArbitrator"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 87,
            "name": "arbitratorExtraData",
            "nodeType": "VariableDeclaration",
            "scope": 157,
            "src": "1394:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 86,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1394:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "1525:89:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 90,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15075,
                            "src": "1534:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1534:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 93,
                              "name": "arbitrator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "1556:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                                "typeString": "contract AutoArbitrator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                                "typeString": "contract AutoArbitrator"
                              }
                            ],
                            "id": 92,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1548:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1548:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1534:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e206f6e6c792062652063616c6c6564206279207468652061726269747261746f722e",
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1569:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8acf8e40ecf8fce4ddda0c11f538911b40cf953f2780b0c76f2e50588a0db13b",
                          "typeString": "literal_string \"Can only be called by the arbitrator.\""
                        },
                        "value": "Can only be called by the arbitrator."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8acf8e40ecf8fce4ddda0c11f538911b40cf953f2780b0c76f2e50588a0db13b",
                          "typeString": "literal_string \"Can only be called by the arbitrator.\""
                        }
                      ],
                      "id": 89,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "1526:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1526:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "1526:83:0"
                },
                {
                  "id": 99,
                  "nodeType": "PlaceholderStatement",
                  "src": "1611:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 101,
            "name": "onlyArbitrator",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1525:0:0"
            },
            "src": "1501:113:0",
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 109,
            "name": "Ruling",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "indexed": true,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "1639:34:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                    "typeString": "contract AutoArbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 102,
                    "name": "AutoArbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 288,
                    "src": "1639:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                      "typeString": "contract AutoArbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "1675:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1675:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 107,
                  "indexed": false,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "1700:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1700:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1638:75:0"
            },
            "src": "1626:88:0"
          },
          {
            "body": {
              "id": 124,
              "nodeType": "Block",
              "src": "2001:96:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 116,
                      "name": "arbitrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "2012:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                        "typeString": "contract AutoArbitrator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 117,
                      "name": "_arbitrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "2025:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                        "typeString": "contract AutoArbitrator"
                      }
                    },
                    "src": "2012:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                      "typeString": "contract AutoArbitrator"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "2012:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 120,
                      "name": "arbitratorExtraData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "2047:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 121,
                      "name": "_arbitratorExtraData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "2069:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2047:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "2047:42:0"
                }
              ]
            },
            "documentation": "@dev Constructor. Choose the arbitrator.\r\n @param _arbitrator The arbitrator of the contract.\r\n @param _arbitratorExtraData Extra data for the arbitrator.\r",
            "id": 125,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "1931:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                    "typeString": "contract AutoArbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 110,
                    "name": "AutoArbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 288,
                    "src": "1931:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                      "typeString": "contract AutoArbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "name": "_arbitratorExtraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "1959:33:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1959:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1930:63:0"
            },
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2001:0:0"
            },
            "scope": 157,
            "src": "1919:178:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "2572:123:0",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 136,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15075,
                              "src": "2610:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2610:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 135,
                          "name": "AutoArbitrator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 288,
                          "src": "2595:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AutoArbitrator_$288_$",
                            "typeString": "type(contract AutoArbitrator)"
                          }
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2595:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                          "typeString": "contract AutoArbitrator"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 139,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "2622:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "2633:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                          "typeString": "contract AutoArbitrator"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 134,
                      "name": "Ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "2588:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_AutoArbitrator_$288_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract AutoArbitrator,uint256,uint256)"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2588:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "EmitStatement",
                  "src": "2583:58:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 144,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "2668:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 145,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "2679:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 143,
                      "name": "executeRuling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "2654:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2654:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "2654:33:0"
                }
              ]
            },
            "documentation": "@dev Give a ruling for a dispute. Must be called by the arbitrator.\r\n The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\r\n @param _disputeID ID of the dispute in the Arbitrator contract.\r\n @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\r",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 132,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 131,
                  "name": "onlyArbitrator",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 101,
                  "src": "2557:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2557:14:0"
              }
            ],
            "name": "rule",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "2519:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2519:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "2536:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2536:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2518:31:0"
            },
            "returnParameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2572:0:0"
            },
            "scope": 157,
            "src": "2505:190:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Execute a ruling of a dispute.\r\n @param _disputeID ID of the dispute in the Arbitrator contract.\r\n @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\r",
            "id": 156,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "executeRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "2978:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2978:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "2995:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2995:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2977:31:0"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3017:0:0"
            },
            "scope": 157,
            "src": "2955:63:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 798,
        "src": "1323:1698:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 288,
        "linearizedBaseContracts": [
          288
        ],
        "name": "AutoArbitrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "AutoArbitrator.DisputeStatus",
            "id": 161,
            "members": [
              {
                "id": 158,
                "name": "Waiting",
                "nodeType": "EnumValue",
                "src": "3082:7:0"
              },
              {
                "id": 159,
                "name": "Appealable",
                "nodeType": "EnumValue",
                "src": "3091:10:0"
              },
              {
                "id": 160,
                "name": "Solved",
                "nodeType": "EnumValue",
                "src": "3103:6:0"
              }
            ],
            "name": "DisputeStatus",
            "nodeType": "EnumDefinition",
            "src": "3062:48:0"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "3174:126:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 166,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15075,
                            "src": "3193:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3193:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 169,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 163,
                              "src": "3222:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 168,
                            "name": "arbitrationCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 234,
                            "src": "3206:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (bytes memory) view returns (uint256)"
                            }
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3206:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3193:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f7567682045544820746f20636f766572206172626974726174696f6e20636f7374732e",
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3235:44:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs.\""
                        },
                        "value": "Not enough ETH to cover arbitration costs."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs.\""
                        }
                      ],
                      "id": 165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "3185:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3185:95:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "3185:95:0"
                },
                {
                  "id": 175,
                  "nodeType": "PlaceholderStatement",
                  "src": "3291:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 177,
            "name": "requireArbitrationFee",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "3149:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3149:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3148:25:0"
            },
            "src": "3118:182:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 195,
              "nodeType": "Block",
              "src": "3374:128:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 184,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15075,
                            "src": "3393:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3393:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 187,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 179,
                              "src": "3417:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 188,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 181,
                              "src": "3429:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 186,
                            "name": "appealCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "3406:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,bytes memory) view returns (uint256)"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3406:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3393:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f7567682045544820746f20636f7665722061707065616c20636f7374732e",
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3442:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48e4504850ba6c91b788fac6bc20c12a8accd4a118f5567e03230e22511612d3",
                          "typeString": "literal_string \"Not enough ETH to cover appeal costs.\""
                        },
                        "value": "Not enough ETH to cover appeal costs."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48e4504850ba6c91b788fac6bc20c12a8accd4a118f5567e03230e22511612d3",
                          "typeString": "literal_string \"Not enough ETH to cover appeal costs.\""
                        }
                      ],
                      "id": 183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "3385:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3385:97:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "3385:97:0"
                },
                {
                  "id": 194,
                  "nodeType": "PlaceholderStatement",
                  "src": "3493:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 196,
            "name": "requireAppealFee",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 196,
                  "src": "3332:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3332:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 181,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 196,
                  "src": "3349:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3349:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3331:42:0"
            },
            "src": "3306:196:0",
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "@dev To be raised when a dispute is created.\r\n @param _disputeID ID of the dispute.\r\n @param _arbitrable The contract which created the dispute.\r",
            "id": 202,
            "name": "DisputeCreation",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "3709:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3709:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "indexed": true,
                  "name": "_arbitrable",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "3734:34:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                    "typeString": "contract AutoArbitrable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 199,
                    "name": "AutoArbitrable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 157,
                    "src": "3734:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                      "typeString": "contract AutoArbitrable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3708:61:0"
            },
            "src": "3687:83:0"
          },
          {
            "anonymous": false,
            "documentation": "@dev To be raised when a dispute can be appealed.\r\n @param _disputeID ID of the dispute.\r",
            "id": 208,
            "name": "AppealPossible",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 204,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "3913:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3913:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "indexed": true,
                  "name": "_arbitrable",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "3938:34:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                    "typeString": "contract AutoArbitrable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 205,
                    "name": "AutoArbitrable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 157,
                    "src": "3938:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                      "typeString": "contract AutoArbitrable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3912:61:0"
            },
            "src": "3892:82:0"
          },
          {
            "anonymous": false,
            "documentation": "@dev To be raised when the current ruling is appealed.\r\n @param _disputeID ID of the dispute.\r\n @param _arbitrable The contract which created the dispute.\r",
            "id": 214,
            "name": "AppealDecision",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 210,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "4190:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4190:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 212,
                  "indexed": true,
                  "name": "_arbitrable",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "4215:34:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                    "typeString": "contract AutoArbitrable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 211,
                    "name": "AutoArbitrable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 157,
                    "src": "4215:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                      "typeString": "contract AutoArbitrable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4189:61:0"
            },
            "src": "4169:82:0"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "4770:2:0",
              "statements": []
            },
            "documentation": "@dev Create a dispute. Must be called by the arbitrable contract.\r\n Must be paid at least arbitrationCost(_extraData).\r\n @param _choices Amount of choices the arbitrator can make in this dispute.\r\n @param _extraData Can be used to give additional info on the dispute to be created.\r\n @return disputeID ID of the dispute created.\r",
            "id": 227,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 221,
                    "name": "_extraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 218,
                    "src": "4726:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 222,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 220,
                  "name": "requireArbitrationFee",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 177,
                  "src": "4704:21:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes_memory_ptr_$",
                    "typeString": "modifier (bytes memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4704:33:0"
              }
            ],
            "name": "createDispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 216,
                  "name": "_choices",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "4657:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4657:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 218,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "4672:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4672:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4656:40:0"
            },
            "returnParameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 224,
                  "name": "disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "4754:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4754:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4753:16:0"
            },
            "scope": 288,
            "src": "4634:138:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\r\n @param _extraData Can be used to give additional info on the dispute to be created.\r\n @return fee Amount to be paid.\r",
            "id": 234,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "arbitrationCost",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "5141:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5141:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5140:25:0"
            },
            "returnParameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 232,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "5186:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5186:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5185:10:0"
            },
            "scope": 288,
            "src": "5116:80:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 253,
              "nodeType": "Block",
              "src": "5564:78:0",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 246,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "5595:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 248,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15075,
                              "src": "5622:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5622:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 247,
                          "name": "AutoArbitrable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "5607:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AutoArbitrable_$157_$",
                            "typeString": "type(contract AutoArbitrable)"
                          }
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5607:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                          "typeString": "contract AutoArbitrable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                          "typeString": "contract AutoArbitrable"
                        }
                      ],
                      "id": 245,
                      "name": "AppealDecision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "5580:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_AutoArbitrable_$157_$returns$__$",
                        "typeString": "function (uint256,contract AutoArbitrable)"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5580:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 252,
                  "nodeType": "EmitStatement",
                  "src": "5575:59:0"
                }
              ]
            },
            "documentation": "@dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\r\n @param _disputeID ID of the dispute to be appealed.\r\n @param _extraData Can be used to give extra info on the appeal.\r",
            "id": 254,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 241,
                    "name": "_disputeID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 236,
                    "src": "5533:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 242,
                    "name": "_extraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 238,
                    "src": "5544:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 243,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 240,
                  "name": "requireAppealFee",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 196,
                  "src": "5516:16:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$_t_bytes_memory_ptr_$",
                    "typeString": "modifier (uint256,bytes memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5516:39:0"
              }
            ],
            "name": "appeal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 236,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 254,
                  "src": "5467:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5467:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 238,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 254,
                  "src": "5484:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5484:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5466:42:0"
            },
            "returnParameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5564:0:0"
            },
            "scope": 288,
            "src": "5451:191:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\r\n @param _disputeID ID of the dispute to be appealed.\r\n @param _extraData Can be used to give additional info on the dispute to be created.\r\n @return fee Amount to be paid.\r",
            "id": 263,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "appealCost",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 256,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "6061:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6061:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 258,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "6078:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6078:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6060:42:0"
            },
            "returnParameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 261,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "6123:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6123:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6122:10:0"
            },
            "scope": 288,
            "src": "6041:92:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 272,
              "nodeType": "Block",
              "src": "6428:2:0",
              "statements": []
            },
            "documentation": "@dev Compute the start and end of the dispute's current or next appeal period, if possible.\r\n @param _disputeID ID of the dispute.\r\n @return The start and end of the period.\r",
            "id": 273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appealPeriod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "6369:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6369:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6368:17:0"
            },
            "returnParameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 268,
                  "name": "start",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "6406:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6406:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 270,
                  "name": "end",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "6418:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6418:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6405:22:0"
            },
            "scope": 288,
            "src": "6347:83:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Return the status of a dispute.\r\n @param _disputeID ID of the dispute to rule.\r\n @return status The status of the dispute.\r",
            "id": 280,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "disputeStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "6621:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6621:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6620:17:0"
            },
            "returnParameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "6658:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DisputeStatus_$161",
                    "typeString": "enum AutoArbitrator.DisputeStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 277,
                    "name": "DisputeStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 161,
                    "src": "6658:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$161",
                      "typeString": "enum AutoArbitrator.DisputeStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6657:22:0"
            },
            "scope": 288,
            "src": "6598:82:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\r\n @param _disputeID ID of the dispute.\r\n @return ruling The ruling which has been given or the one which will be given if there is no appeal.\r",
            "id": 287,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "currentRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 287,
                  "src": "6988:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6988:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6987:17:0"
            },
            "returnParameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 285,
                  "name": "ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 287,
                  "src": "7025:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7025:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7024:13:0"
            },
            "scope": 288,
            "src": "6965:73:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 798,
        "src": "3029:4012:0"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 289,
              "name": "AutoArbitrator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 288,
              "src": "7096:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AutoArbitrator_$288",
                "typeString": "contract AutoArbitrator"
              }
            },
            "id": 290,
            "nodeType": "InheritanceSpecifier",
            "src": "7096:14:0"
          }
        ],
        "contractDependencies": [
          288
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 797,
        "linearizedBaseContracts": [
          797,
          288
        ],
        "name": "AutoAppealableArbitrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 293,
            "libraryName": {
              "contractScope": null,
              "id": 291,
              "name": "CappedMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 83,
              "src": "7124:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedMath_$83",
                "typeString": "library CappedMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "7118:26:0",
            "typeName": {
              "id": 292,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7139:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 297,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 797,
            "src": "7204:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 294,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "7204:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "expression": {
                "argumentTypes": null,
                "id": 295,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 15075,
                "src": "7227:3:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 296,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "referencedDeclaration": null,
              "src": "7227:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 299,
            "name": "arbitrationPrice",
            "nodeType": "VariableDeclaration",
            "scope": 797,
            "src": "7244:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 298,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7244:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 309,
            "name": "NOT_PAYABLE_VALUE",
            "nodeType": "VariableDeclaration",
            "scope": 797,
            "src": "7339:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 300,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7339:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
                "typeString": "int_const 5789...(69 digits omitted)...9967"
              },
              "id": 308,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639934_by_1",
                      "typeString": "int_const 1157...(70 digits omitted)...9934"
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                        "typeString": "int_const 1157...(70 digits omitted)...9936"
                      },
                      "id": 303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7374:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "323536",
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7377:3:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_256_by_1",
                          "typeString": "int_const 256"
                        },
                        "value": "256"
                      },
                      "src": "7374:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                        "typeString": "int_const 1157...(70 digits omitted)...9936"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7383:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "7374:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639934_by_1",
                      "typeString": "int_const 1157...(70 digits omitted)...9934"
                    }
                  }
                ],
                "id": 306,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "7373:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639934_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9934"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "/",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "32",
                "id": 307,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7388:1:0",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2_by_1",
                  "typeString": "int_const 2"
                },
                "value": "2"
              },
              "src": "7373:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
                "typeString": "int_const 5789...(69 digits omitted)...9967"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "AutoAppealableArbitrator.Dispute",
            "id": 326,
            "members": [
              {
                "constant": false,
                "id": 311,
                "name": "arbitrated",
                "nodeType": "VariableDeclaration",
                "scope": 326,
                "src": "7483:25:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                  "typeString": "contract AutoArbitrable"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 310,
                  "name": "AutoArbitrable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 157,
                  "src": "7483:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                    "typeString": "contract AutoArbitrable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 313,
                "name": "choices",
                "nodeType": "VariableDeclaration",
                "scope": 326,
                "src": "7559:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 312,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "7559:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 315,
                "name": "fees",
                "nodeType": "VariableDeclaration",
                "scope": 326,
                "src": "7639:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 314,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "7639:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 317,
                "name": "ruling",
                "nodeType": "VariableDeclaration",
                "scope": 326,
                "src": "7729:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 316,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "7729:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 319,
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 326,
                "src": "7785:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_DisputeStatus_$161",
                  "typeString": "enum AutoArbitrator.DisputeStatus"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 318,
                  "name": "DisputeStatus",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 161,
                  "src": "7785:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DisputeStatus_$161",
                    "typeString": "enum AutoArbitrator.DisputeStatus"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 321,
                "name": "appealCost",
                "nodeType": "VariableDeclaration",
                "scope": 326,
                "src": "7848:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 320,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "7848:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 323,
                "name": "appealPeriodStart",
                "nodeType": "VariableDeclaration",
                "scope": 326,
                "src": "7931:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 322,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "7931:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 325,
                "name": "appealPeriodEnd",
                "nodeType": "VariableDeclaration",
                "scope": 326,
                "src": "8026:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 324,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "8026:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Dispute",
            "nodeType": "StructDefinition",
            "scope": 797,
            "src": "7457:659:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 337,
              "nodeType": "Block",
              "src": "8143:68:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 329,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15075,
                            "src": "8152:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8152:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 331,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 297,
                          "src": "8164:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8152:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e206f6e6c792062652063616c6c656420627920746865206f776e65722e",
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8171:34:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf33d29683e5562cfb7e5d7016dc68533d604c99c45e8c622ac0ad8361611bfa",
                          "typeString": "literal_string \"Can only be called by the owner.\""
                        },
                        "value": "Can only be called by the owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf33d29683e5562cfb7e5d7016dc68533d604c99c45e8c622ac0ad8361611bfa",
                          "typeString": "literal_string \"Can only be called by the owner.\""
                        }
                      ],
                      "id": 328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "8144:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8144:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "8144:62:0"
                },
                {
                  "id": 336,
                  "nodeType": "PlaceholderStatement",
                  "src": "8208:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 338,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8143:0:0"
            },
            "src": "8124:87:0",
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 341,
            "name": "disputes",
            "nodeType": "VariableDeclaration",
            "scope": 797,
            "src": "8219:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
              "typeString": "struct AutoAppealableArbitrator.Dispute[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 339,
                "name": "Dispute",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 326,
                "src": "8219:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                  "typeString": "struct AutoAppealableArbitrator.Dispute"
                }
              },
              "id": 340,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "8219:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage_ptr",
                "typeString": "struct AutoAppealableArbitrator.Dispute[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 350,
              "nodeType": "Block",
              "src": "8436:55:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 346,
                      "name": "arbitrationPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "8447:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 347,
                      "name": "_arbitrationPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "8466:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8447:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 349,
                  "nodeType": "ExpressionStatement",
                  "src": "8447:36:0"
                }
              ]
            },
            "documentation": "@dev Constructor. Set the initial arbitration price.\r\n @param _arbitrationPrice Amount to be paid for arbitration.\r",
            "id": 351,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 343,
                  "name": "_arbitrationPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 351,
                  "src": "8405:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 342,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8405:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8404:24:0"
            },
            "returnParameters": {
              "id": 345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8436:0:0"
            },
            "scope": 797,
            "src": "8393:98:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 362,
              "nodeType": "Block",
              "src": "8718:55:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 358,
                      "name": "arbitrationPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "8729:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 359,
                      "name": "_arbitrationPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 353,
                      "src": "8748:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8729:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "8729:36:0"
                }
              ]
            },
            "documentation": "@dev Set the arbitration price. Only callable by the owner.\r\n @param _arbitrationPrice Amount to be paid for arbitration.\r",
            "id": 363,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 356,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 355,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 338,
                  "src": "8708:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8708:9:0"
              }
            ],
            "name": "setArbitrationPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 353,
                  "name": "_arbitrationPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "8675:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8675:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8674:24:0"
            },
            "returnParameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8718:0:0"
            },
            "scope": 797,
            "src": "8646:127:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 372,
              "nodeType": "Block",
              "src": "9029:42:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 370,
                    "name": "arbitrationPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 299,
                    "src": "9047:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 369,
                  "id": 371,
                  "nodeType": "Return",
                  "src": "9040:23:0"
                }
              ]
            },
            "documentation": "@dev Cost of arbitration. Accessor to arbitrationPrice.\r\n @param _extraData Not used by this contract.\r\n @return fee Amount to be paid.\r",
            "id": 373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "arbitrationCost",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 365,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "8974:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 364,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8974:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8973:25:0"
            },
            "returnParameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 368,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "9019:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9019:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9018:10:0"
            },
            "scope": 797,
            "src": "8949:122:0",
            "stateMutability": "view",
            "superFunction": 234,
            "visibility": "public"
          },
          {
            "body": {
              "id": 399,
              "nodeType": "Block",
              "src": "9435:215:0",
              "statements": [
                {
                  "assignments": [
                    383
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 383,
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "scope": 399,
                      "src": "9446:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                        "typeString": "struct AutoAppealableArbitrator.Dispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 382,
                        "name": "Dispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 326,
                        "src": "9446:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 387,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 384,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "9472:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                        "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                      }
                    },
                    "id": 386,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 385,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "9481:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9472:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$326_storage",
                      "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9446:46:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$161",
                      "typeString": "enum AutoArbitrator.DisputeStatus"
                    },
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 388,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 383,
                        "src": "9507:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 389,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 319,
                      "src": "9507:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 390,
                        "name": "DisputeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "9525:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                          "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                        }
                      },
                      "id": 391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Appealable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "9525:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "src": "9507:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 396,
                      "name": "NOT_PAYABLE_VALUE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "9625:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 381,
                    "id": 397,
                    "nodeType": "Return",
                    "src": "9618:24:0"
                  },
                  "id": 398,
                  "nodeType": "IfStatement",
                  "src": "9503:139:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 393,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 383,
                        "src": "9571:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 394,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "appealCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 321,
                      "src": "9571:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 381,
                    "id": 395,
                    "nodeType": "Return",
                    "src": "9564:25:0"
                  }
                }
              ]
            },
            "documentation": "@dev Cost of appeal. If appeal is not possible, it's a high value which can never be paid.\r\n @param _disputeID ID of the dispute to be appealed.\r\n @param _extraData Not used by this contract.\r\n @return fee Amount to be paid.\r",
            "id": 400,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appealCost",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 375,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "9363:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9363:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 377,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "9380:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9380:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9362:42:0"
            },
            "returnParameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 380,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "9425:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9425:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9424:10:0"
            },
            "scope": 797,
            "src": "9343:307:0",
            "stateMutability": "view",
            "superFunction": 263,
            "visibility": "public"
          },
          {
            "body": {
              "id": 447,
              "nodeType": "Block",
              "src": "10149:520:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 412,
                        "name": "_choices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "10180:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 413,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 404,
                        "src": "10190:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 409,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15095,
                        "src": "10160:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_AutoAppealableArbitrator_$797",
                          "typeString": "contract super AutoAppealableArbitrator"
                        }
                      },
                      "id": 411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createDispute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 227,
                      "src": "10160:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bytes memory) returns (uint256)"
                      }
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10160:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 415,
                  "nodeType": "ExpressionStatement",
                  "src": "10160:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 416,
                      "name": "disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 407,
                      "src": "10212:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 421,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 15075,
                                      "src": "10288:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 422,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "10288:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 420,
                                  "name": "AutoArbitrable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 157,
                                  "src": "10273:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AutoArbitrable_$157_$",
                                    "typeString": "type(contract AutoArbitrable)"
                                  }
                                },
                                "id": 423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10273:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                                  "typeString": "contract AutoArbitrable"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 424,
                                "name": "_choices",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 402,
                                "src": "10323:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 425,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15075,
                                  "src": "10352:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 426,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "10352:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10384:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 428,
                                  "name": "DisputeStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 161,
                                  "src": "10408:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                                    "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                                  }
                                },
                                "id": 429,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Waiting",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "10408:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DisputeStatus_$161",
                                  "typeString": "enum AutoArbitrator.DisputeStatus"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 430,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10456:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10491:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10524:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 419,
                              "name": "Dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 326,
                              "src": "10238:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Dispute_$326_storage_ptr_$",
                                "typeString": "type(struct AutoAppealableArbitrator.Dispute storage pointer)"
                              }
                            },
                            "id": 433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "arbitrated",
                              "choices",
                              "fees",
                              "ruling",
                              "status",
                              "appealCost",
                              "appealPeriodStart",
                              "appealPeriodEnd"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "10238:303:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$326_memory",
                              "typeString": "struct AutoAppealableArbitrator.Dispute memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Dispute_$326_memory",
                              "typeString": "struct AutoAppealableArbitrator.Dispute memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 417,
                            "name": "disputes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 341,
                            "src": "10224:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                            }
                          },
                          "id": 418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "push",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10224:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Dispute_$326_storage_$returns$_t_uint256_$",
                            "typeString": "function (struct AutoAppealableArbitrator.Dispute storage ref) returns (uint256)"
                          }
                        },
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10224:318:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10545:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "10224:322:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10212:334:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "10212:334:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 440,
                        "name": "disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 407,
                        "src": "10623:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 442,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15075,
                              "src": "10649:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10649:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 441,
                          "name": "AutoArbitrable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "10634:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AutoArbitrable_$157_$",
                            "typeString": "type(contract AutoArbitrable)"
                          }
                        },
                        "id": 444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10634:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                          "typeString": "contract AutoArbitrable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                          "typeString": "contract AutoArbitrable"
                        }
                      ],
                      "id": 439,
                      "name": "DisputeCreation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "10607:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_AutoArbitrable_$157_$returns$__$",
                        "typeString": "function (uint256,contract AutoArbitrable)"
                      }
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10607:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 446,
                  "nodeType": "EmitStatement",
                  "src": "10602:59:0"
                }
              ]
            },
            "documentation": "@dev Create a dispute. Must be called by the arbitrable contract.\r\n Must be paid at least arbitrationCost().\r\n @param _choices Amount of choices the arbitrator can make in this dispute. When ruling <= choices.\r\n @param _extraData Can be used to give additional info on the dispute to be created.\r\n @return disputeID ID of the dispute created.\r",
            "id": 448,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createDispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "name": "_choices",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "10070:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10070:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "10085:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10085:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10069:40:0"
            },
            "returnParameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "name": "disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "10133:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10133:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10132:16:0"
            },
            "scope": 797,
            "src": "10047:622:0",
            "stateMutability": "payable",
            "superFunction": 227,
            "visibility": "public"
          },
          {
            "body": {
              "id": 511,
              "nodeType": "Block",
              "src": "10967:438:0",
              "statements": [
                {
                  "assignments": [
                    458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 458,
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "scope": 511,
                      "src": "10978:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                        "typeString": "struct AutoAppealableArbitrator.Dispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 457,
                        "name": "Dispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 326,
                        "src": "10978:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 462,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 459,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "11004:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                        "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                      }
                    },
                    "id": 461,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 460,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 450,
                      "src": "11013:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11004:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$326_storage",
                      "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10978:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 464,
                          "name": "_ruling",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "11043:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 465,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "11054:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "choices",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 313,
                          "src": "11054:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11043:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642072756c696e672e",
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11071:17:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30a1efd31034a387a6ecd17203195002f6ea4f4b6af4307c4b0d6824823a3ea6",
                          "typeString": "literal_string \"Invalid ruling.\""
                        },
                        "value": "Invalid ruling."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30a1efd31034a387a6ecd17203195002f6ea4f4b6af4307c4b0d6824823a3ea6",
                          "typeString": "literal_string \"Invalid ruling.\""
                        }
                      ],
                      "id": 463,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "11035:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11035:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "11035:54:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$161",
                          "typeString": "enum AutoArbitrator.DisputeStatus"
                        },
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 472,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "11108:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 319,
                          "src": "11108:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum AutoArbitrator.DisputeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 474,
                            "name": "DisputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "11126:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                              "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                            }
                          },
                          "id": 475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Waiting",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11126:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum AutoArbitrator.DisputeStatus"
                          }
                        },
                        "src": "11108:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652064697370757465206d7573742062652077616974696e6720666f72206172626974726174696f6e2e",
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11149:46:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be7e436dedbe675f7876e6c490cf87bff3825085a91f95c94f14647ae13c8634",
                          "typeString": "literal_string \"The dispute must be waiting for arbitration.\""
                        },
                        "value": "The dispute must be waiting for arbitration."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be7e436dedbe675f7876e6c490cf87bff3825085a91f95c94f14647ae13c8634",
                          "typeString": "literal_string \"The dispute must be waiting for arbitration.\""
                        }
                      ],
                      "id": 471,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "11100:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11100:96:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 479,
                  "nodeType": "ExpressionStatement",
                  "src": "11100:96:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 480,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "11209:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 482,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ruling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 317,
                      "src": "11209:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 483,
                      "name": "_ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "11226:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11209:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 485,
                  "nodeType": "ExpressionStatement",
                  "src": "11209:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 486,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "11244:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 488,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 319,
                      "src": "11244:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 489,
                        "name": "DisputeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "11261:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                          "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                        }
                      },
                      "id": 490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Solved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11261:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "src": "11244:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$161",
                      "typeString": "enum AutoArbitrator.DisputeStatus"
                    }
                  },
                  "id": 492,
                  "nodeType": "ExpressionStatement",
                  "src": "11244:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 498,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 458,
                          "src": "11310:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                            "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                          }
                        },
                        "id": 499,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fees",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 315,
                        "src": "11310:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 493,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15075,
                          "src": "11294:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11294:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "send",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11294:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11294:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "11294:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 507,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 450,
                        "src": "11377:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 508,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "11389:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 502,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 458,
                          "src": "11353:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                            "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                          }
                        },
                        "id": 505,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arbitrated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 311,
                        "src": "11353:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                          "typeString": "contract AutoArbitrable"
                        }
                      },
                      "id": 506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rule",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 149,
                      "src": "11353:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11353:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 510,
                  "nodeType": "ExpressionStatement",
                  "src": "11353:44:0"
                }
              ]
            },
            "documentation": "@dev Give a ruling. UNTRUSTED.\r\n @param _disputeID ID of the dispute to rule.\r\n @param _ruling Ruling given by the arbitrator. Note that 0 means \"Not able/wanting to make a decision\".\r",
            "id": 512,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 455,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 454,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 338,
                  "src": "10957:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10957:9:0"
              }
            ],
            "name": "giveRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 450,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "10917:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10917:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 452,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "10934:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10934:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10916:31:0"
            },
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10967:0:0"
            },
            "scope": 797,
            "src": "10897:508:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 582,
              "nodeType": "Block",
              "src": "11861:481:0",
              "statements": [
                {
                  "assignments": [
                    526
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 526,
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "scope": 582,
                      "src": "11872:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                        "typeString": "struct AutoAppealableArbitrator.Dispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 525,
                        "name": "Dispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 326,
                        "src": "11872:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 530,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 527,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "11898:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                        "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                      }
                    },
                    "id": 529,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 528,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "11907:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11898:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$326_storage",
                      "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11872:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 532,
                          "name": "_ruling",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 516,
                          "src": "11937:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 533,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 526,
                            "src": "11948:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 534,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "choices",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 313,
                          "src": "11948:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11937:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642072756c696e672e",
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11965:17:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30a1efd31034a387a6ecd17203195002f6ea4f4b6af4307c4b0d6824823a3ea6",
                          "typeString": "literal_string \"Invalid ruling.\""
                        },
                        "value": "Invalid ruling."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30a1efd31034a387a6ecd17203195002f6ea4f4b6af4307c4b0d6824823a3ea6",
                          "typeString": "literal_string \"Invalid ruling.\""
                        }
                      ],
                      "id": 531,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "11929:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11929:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "11929:54:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$161",
                          "typeString": "enum AutoArbitrator.DisputeStatus"
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 540,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 526,
                            "src": "12002:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 541,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 319,
                          "src": "12002:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum AutoArbitrator.DisputeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 542,
                            "name": "DisputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "12020:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                              "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                            }
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Waiting",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12020:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum AutoArbitrator.DisputeStatus"
                          }
                        },
                        "src": "12002:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652064697370757465206d7573742062652077616974696e6720666f72206172626974726174696f6e2e",
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12043:46:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be7e436dedbe675f7876e6c490cf87bff3825085a91f95c94f14647ae13c8634",
                          "typeString": "literal_string \"The dispute must be waiting for arbitration.\""
                        },
                        "value": "The dispute must be waiting for arbitration."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be7e436dedbe675f7876e6c490cf87bff3825085a91f95c94f14647ae13c8634",
                          "typeString": "literal_string \"The dispute must be waiting for arbitration.\""
                        }
                      ],
                      "id": 539,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "11994:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11994:96:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "11994:96:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 548,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "12111:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 550,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ruling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 317,
                      "src": "12111:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 551,
                      "name": "_ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 516,
                      "src": "12128:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12111:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "12111:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 554,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "12146:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 556,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 319,
                      "src": "12146:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 557,
                        "name": "DisputeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "12163:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                          "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                        }
                      },
                      "id": 558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Appealable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "12163:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "src": "12146:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$161",
                      "typeString": "enum AutoArbitrator.DisputeStatus"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "12146:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 561,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "12198:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 563,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "appealCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 321,
                      "src": "12198:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 564,
                      "name": "_appealCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "12219:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12198:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 566,
                  "nodeType": "ExpressionStatement",
                  "src": "12198:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 567,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "12241:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 569,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "appealPeriodStart",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 323,
                      "src": "12241:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 570,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15077,
                      "src": "12269:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12241:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "12241:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 573,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "12283:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 575,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "appealPeriodEnd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 325,
                      "src": "12283:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 578,
                          "name": "_timeToAppeal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 520,
                          "src": "12320:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 576,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15077,
                          "src": "12309:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addCap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31,
                        "src": "12309:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12309:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12283:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "12283:51:0"
                }
              ]
            },
            "documentation": "@dev Give an appealable ruling.\r\n @param _disputeID ID of the dispute to rule.\r\n @param _ruling Ruling given by the arbitrator. Note that 0 means \"Not able/wanting to make a decision\".\r\n @param _appealCost The cost of appeal.\r\n @param _timeToAppeal The time to appeal the ruling.\r",
            "id": 583,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 523,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 522,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 338,
                  "src": "11851:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "11851:9:0"
              }
            ],
            "name": "giveAppealableRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 514,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "11773:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11773:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 516,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "11790:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11790:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 518,
                  "name": "_appealCost",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "11804:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11804:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 520,
                  "name": "_timeToAppeal",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "11822:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11822:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11772:69:0"
            },
            "returnParameters": {
              "id": 524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11861:0:0"
            },
            "scope": 797,
            "src": "11743:599:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 613,
              "nodeType": "Block",
              "src": "12622:215:0",
              "statements": [
                {
                  "assignments": [
                    593
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 593,
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "scope": 613,
                      "src": "12633:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                        "typeString": "struct AutoAppealableArbitrator.Dispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 592,
                        "name": "Dispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 326,
                        "src": "12633:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 597,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 594,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "12659:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                        "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                      }
                    },
                    "id": 596,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 595,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "12668:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12659:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$326_storage",
                      "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12633:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$161",
                          "typeString": "enum AutoArbitrator.DisputeStatus"
                        },
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 599,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 593,
                            "src": "12698:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 600,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 319,
                          "src": "12698:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum AutoArbitrator.DisputeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 601,
                            "name": "DisputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "12716:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                              "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                            }
                          },
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Appealable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12716:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum AutoArbitrator.DisputeStatus"
                          }
                        },
                        "src": "12698:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652064697370757465206d7573742062652061707065616c61626c652e",
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12742:33:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1",
                          "typeString": "literal_string \"The dispute must be appealable.\""
                        },
                        "value": "The dispute must be appealable."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1",
                          "typeString": "literal_string \"The dispute must be appealable.\""
                        }
                      ],
                      "id": 598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "12690:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12690:86:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 606,
                  "nodeType": "ExpressionStatement",
                  "src": "12690:86:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 607,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 593,
                        "src": "12797:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 609,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "appealCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 321,
                      "src": "12797:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 610,
                      "name": "_appealCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "12818:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12797:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 612,
                  "nodeType": "ExpressionStatement",
                  "src": "12797:32:0"
                }
              ]
            },
            "documentation": "@dev Change the appeal fee of a dispute.\r\n @param _disputeID The ID of the dispute to update.\r\n @param _appealCost The new cost to appeal this ruling.\r",
            "id": 614,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 590,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 589,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 338,
                  "src": "12612:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12612:9:0"
              }
            ],
            "name": "changeAppealFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 585,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "12568:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12568:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 587,
                  "name": "_appealCost",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "12585:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12585:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12567:35:0"
            },
            "returnParameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12622:0:0"
            },
            "scope": 797,
            "src": "12543:294:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 670,
              "nodeType": "Block",
              "src": "13210:438:0",
              "statements": [
                {
                  "assignments": [
                    626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 626,
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "scope": 670,
                      "src": "13221:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                        "typeString": "struct AutoAppealableArbitrator.Dispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 625,
                        "name": "Dispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 326,
                        "src": "13221:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 630,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 627,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "13247:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                        "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                      }
                    },
                    "id": 629,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 628,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 616,
                      "src": "13256:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13247:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$326_storage",
                      "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13221:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$161",
                          "typeString": "enum AutoArbitrator.DisputeStatus"
                        },
                        "id": 636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 632,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 626,
                            "src": "13286:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 633,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 319,
                          "src": "13286:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum AutoArbitrator.DisputeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 634,
                            "name": "DisputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "13304:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                              "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                            }
                          },
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Appealable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "13304:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum AutoArbitrator.DisputeStatus"
                          }
                        },
                        "src": "13286:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652064697370757465206d7573742062652061707065616c61626c652e",
                        "id": 637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13330:33:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1",
                          "typeString": "literal_string \"The dispute must be appealable.\""
                        },
                        "value": "The dispute must be appealable."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1",
                          "typeString": "literal_string \"The dispute must be appealable.\""
                        }
                      ],
                      "id": 631,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "13278:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13278:86:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 639,
                  "nodeType": "ExpressionStatement",
                  "src": "13278:86:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 641,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15077,
                          "src": "13383:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 642,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 626,
                            "src": "13389:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 643,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "appealPeriodEnd",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 325,
                          "src": "13389:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13383:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652061707065616c206d757374206f63637572206265666f72652074686520656e64206f66207468652061707065616c20706572696f642e",
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13414:60:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_785e30534d9aba417fa2efee2cef6269679d346420799f1ee0b4c1d9e65f4259",
                          "typeString": "literal_string \"The appeal must occur before the end of the appeal period.\""
                        },
                        "value": "The appeal must occur before the end of the appeal period."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_785e30534d9aba417fa2efee2cef6269679d346420799f1ee0b4c1d9e65f4259",
                          "typeString": "literal_string \"The appeal must occur before the end of the appeal period.\""
                        }
                      ],
                      "id": 640,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "13375:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13375:100:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 647,
                  "nodeType": "ExpressionStatement",
                  "src": "13375:100:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 648,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "13496:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 650,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 315,
                      "src": "13496:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 651,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15075,
                        "src": "13512:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13512:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13496:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 654,
                  "nodeType": "ExpressionStatement",
                  "src": "13496:25:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 655,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "13532:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 657,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 319,
                      "src": "13532:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 658,
                        "name": "DisputeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "13549:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                          "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                        }
                      },
                      "id": 659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Waiting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13549:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "src": "13532:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$161",
                      "typeString": "enum AutoArbitrator.DisputeStatus"
                    }
                  },
                  "id": 661,
                  "nodeType": "ExpressionStatement",
                  "src": "13532:38:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 663,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 616,
                        "src": "13601:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 665,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15075,
                              "src": "13628:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "13628:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 664,
                          "name": "AutoArbitrable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "13613:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AutoArbitrable_$157_$",
                            "typeString": "type(contract AutoArbitrable)"
                          }
                        },
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13613:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                          "typeString": "contract AutoArbitrable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                          "typeString": "contract AutoArbitrable"
                        }
                      ],
                      "id": 662,
                      "name": "AppealDecision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "13586:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_AutoArbitrable_$157_$returns$__$",
                        "typeString": "function (uint256,contract AutoArbitrable)"
                      }
                    },
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13586:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 669,
                  "nodeType": "EmitStatement",
                  "src": "13581:59:0"
                }
              ]
            },
            "documentation": "@dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\r\n @param _disputeID ID of the dispute to be appealed.\r\n @param _extraData Can be used to give extra info on the appeal.\r",
            "id": 671,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 621,
                    "name": "_disputeID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 616,
                    "src": "13178:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 622,
                    "name": "_extraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 618,
                    "src": "13190:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 623,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 620,
                  "name": "requireAppealFee",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 196,
                  "src": "13161:16:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$_t_bytes_memory_ptr_$",
                    "typeString": "modifier (uint256,bytes memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "13161:40:0"
              }
            ],
            "name": "appeal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 616,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 671,
                  "src": "13112:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13112:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 618,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 671,
                  "src": "13129:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13129:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13111:42:0"
            },
            "returnParameters": {
              "id": 624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13210:0:0"
            },
            "scope": 797,
            "src": "13096:552:0",
            "stateMutability": "payable",
            "superFunction": 254,
            "visibility": "public"
          },
          {
            "body": {
              "id": 725,
              "nodeType": "Block",
              "src": "13868:458:0",
              "statements": [
                {
                  "assignments": [
                    677
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 677,
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "scope": 725,
                      "src": "13879:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                        "typeString": "struct AutoAppealableArbitrator.Dispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 676,
                        "name": "Dispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 326,
                        "src": "13879:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 681,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 678,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "13905:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                        "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                      }
                    },
                    "id": 680,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 679,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 673,
                      "src": "13914:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13905:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$326_storage",
                      "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13879:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$161",
                          "typeString": "enum AutoArbitrator.DisputeStatus"
                        },
                        "id": 687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 683,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "13944:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 684,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 319,
                          "src": "13944:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum AutoArbitrator.DisputeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 685,
                            "name": "DisputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "13962:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                              "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                            }
                          },
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Appealable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "13962:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$161",
                            "typeString": "enum AutoArbitrator.DisputeStatus"
                          }
                        },
                        "src": "13944:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652064697370757465206d7573742062652061707065616c61626c652e",
                        "id": 688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13988:33:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1",
                          "typeString": "literal_string \"The dispute must be appealable.\""
                        },
                        "value": "The dispute must be appealable."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_214f5c349334cf73c31bc454df531e41ffd52cd786c24c271157f0323bdb60f1",
                          "typeString": "literal_string \"The dispute must be appealable.\""
                        }
                      ],
                      "id": 682,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "13936:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13936:86:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 690,
                  "nodeType": "ExpressionStatement",
                  "src": "13936:86:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 692,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15077,
                          "src": "14041:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 693,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "14048:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "appealPeriodEnd",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 325,
                          "src": "14048:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14041:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652064697370757465206d757374206265206578656375746564206166746572206974732061707065616c20706572696f642068617320656e6465642e",
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14073:65:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ffb16c8c515bb19f47e2c39c4abe69591900df2f6712a42bdbaeaacd81aaa88",
                          "typeString": "literal_string \"The dispute must be executed after its appeal period has ended.\""
                        },
                        "value": "The dispute must be executed after its appeal period has ended."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ffb16c8c515bb19f47e2c39c4abe69591900df2f6712a42bdbaeaacd81aaa88",
                          "typeString": "literal_string \"The dispute must be executed after its appeal period has ended.\""
                        }
                      ],
                      "id": 691,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15078,
                        15079
                      ],
                      "referencedDeclaration": 15079,
                      "src": "14033:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14033:106:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 698,
                  "nodeType": "ExpressionStatement",
                  "src": "14033:106:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 699,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "14160:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 701,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 319,
                      "src": "14160:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 702,
                        "name": "DisputeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "14177:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                          "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                        }
                      },
                      "id": 703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Solved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14177:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "src": "14160:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$161",
                      "typeString": "enum AutoArbitrator.DisputeStatus"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
                  "src": "14160:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 711,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "14224:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                            "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                          }
                        },
                        "id": 712,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fees",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 315,
                        "src": "14224:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 706,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15075,
                          "src": "14208:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "14208:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "send",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14208:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14208:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 714,
                  "nodeType": "ExpressionStatement",
                  "src": "14208:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 720,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 673,
                        "src": "14291:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 721,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "14303:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                            "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                          }
                        },
                        "id": 722,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ruling",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 317,
                        "src": "14303:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 715,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "14267:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                            "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                          }
                        },
                        "id": 718,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arbitrated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 311,
                        "src": "14267:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AutoArbitrable_$157",
                          "typeString": "contract AutoArbitrable"
                        }
                      },
                      "id": 719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rule",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 149,
                      "src": "14267:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14267:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 724,
                  "nodeType": "ExpressionStatement",
                  "src": "14267:51:0"
                }
              ]
            },
            "documentation": "@dev Execute the ruling of a dispute after the appeal period has passed. UNTRUSTED.\r\n @param _disputeID ID of the dispute to execute.\r",
            "id": 726,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 673,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 726,
                  "src": "13842:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 672,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13842:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13841:17:0"
            },
            "returnParameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13868:0:0"
            },
            "scope": 797,
            "src": "13819:507:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 760,
              "nodeType": "Block",
              "src": "14627:360:0",
              "statements": [
                {
                  "assignments": [
                    734
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 734,
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "scope": 760,
                      "src": "14638:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                        "typeString": "struct AutoAppealableArbitrator.Dispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 733,
                        "name": "Dispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 326,
                        "src": "14638:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 738,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 735,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "14664:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                        "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                      }
                    },
                    "id": 737,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 736,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 728,
                      "src": "14673:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14664:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$326_storage",
                      "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14638:46:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      },
                      "id": 745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 739,
                            "name": "disputes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 341,
                            "src": "14699:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                              "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                            }
                          },
                          "id": 741,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 740,
                            "name": "_disputeID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 728,
                            "src": "14708:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14699:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$326_storage",
                            "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                          }
                        },
                        "id": 742,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "status",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 319,
                        "src": "14699:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$161",
                          "typeString": "enum AutoArbitrator.DisputeStatus"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 743,
                          "name": "DisputeStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "14728:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                            "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                          }
                        },
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Appealable",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "14728:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$161",
                          "typeString": "enum AutoArbitrator.DisputeStatus"
                        }
                      },
                      "src": "14699:53:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 746,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15077,
                        "src": "14756:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 747,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 734,
                          "src": "14761:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                            "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                          }
                        },
                        "id": 748,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "appealPeriodEnd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 325,
                        "src": "14761:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14756:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14699:85:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 754,
                          "name": "disputes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 341,
                          "src": "14952:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                            "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                          }
                        },
                        "id": 756,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 755,
                          "name": "_disputeID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 728,
                          "src": "14961:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14952:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                        }
                      },
                      "id": 757,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 319,
                      "src": "14952:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "functionReturnParameters": 732,
                    "id": 758,
                    "nodeType": "Return",
                    "src": "14945:34:0"
                  },
                  "id": 759,
                  "nodeType": "IfStatement",
                  "src": "14695:284:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 751,
                        "name": "DisputeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "14896:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$161_$",
                          "typeString": "type(enum AutoArbitrator.DisputeStatus)"
                        }
                      },
                      "id": 752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Solved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14896:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$161",
                        "typeString": "enum AutoArbitrator.DisputeStatus"
                      }
                    },
                    "functionReturnParameters": 732,
                    "id": 753,
                    "nodeType": "Return",
                    "src": "14889:27:0"
                  }
                }
              ]
            },
            "documentation": "@dev Return the status of a dispute (in the sense of ERC792, not the Dispute property).\r\n @param _disputeID ID of the dispute to rule.\r\n @return status The status of the dispute.\r",
            "id": 761,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disputeStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 728,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 761,
                  "src": "14568:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 727,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14568:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14567:17:0"
            },
            "returnParameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 731,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 761,
                  "src": "14605:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DisputeStatus_$161",
                    "typeString": "enum AutoArbitrator.DisputeStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 730,
                    "name": "DisputeStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 161,
                    "src": "14605:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$161",
                      "typeString": "enum AutoArbitrator.DisputeStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14604:22:0"
            },
            "scope": 797,
            "src": "14545:442:0",
            "stateMutability": "view",
            "superFunction": 280,
            "visibility": "public"
          },
          {
            "body": {
              "id": 773,
              "nodeType": "Block",
              "src": "15276:53:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 768,
                        "name": "disputes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "15294:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                          "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                        }
                      },
                      "id": 770,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 769,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "15303:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "15294:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$326_storage",
                        "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "ruling",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 317,
                    "src": "15294:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 767,
                  "id": 772,
                  "nodeType": "Return",
                  "src": "15287:34:0"
                }
              ]
            },
            "documentation": "@dev Return the ruling of a dispute.\r\n @param _disputeID ID of the dispute.\r\n @return ruling The ruling which have been given or which would be given if no appeals are raised.\r",
            "id": 774,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "currentRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 763,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "15226:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15226:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15225:17:0"
            },
            "returnParameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 766,
                  "name": "ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "15263:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15263:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15262:13:0"
            },
            "scope": 797,
            "src": "15203:126:0",
            "stateMutability": "view",
            "superFunction": 287,
            "visibility": "public"
          },
          {
            "body": {
              "id": 795,
              "nodeType": "Block",
              "src": "15628:135:0",
              "statements": [
                {
                  "assignments": [
                    784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 784,
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "scope": 795,
                      "src": "15639:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                        "typeString": "struct AutoAppealableArbitrator.Dispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 783,
                        "name": "Dispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 326,
                        "src": "15639:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                          "typeString": "struct AutoAppealableArbitrator.Dispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 788,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 785,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "15665:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dispute_$326_storage_$dyn_storage",
                        "typeString": "struct AutoAppealableArbitrator.Dispute storage ref[] storage ref"
                      }
                    },
                    "id": 787,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 786,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 776,
                      "src": "15674:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15665:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$326_storage",
                      "typeString": "struct AutoAppealableArbitrator.Dispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15639:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 789,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "15704:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                            "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                          }
                        },
                        "id": 790,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "appealPeriodStart",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 323,
                        "src": "15704:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 791,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "15731:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$326_storage_ptr",
                            "typeString": "struct AutoAppealableArbitrator.Dispute storage pointer"
                          }
                        },
                        "id": 792,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "appealPeriodEnd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 325,
                        "src": "15731:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 793,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "15703:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 782,
                  "id": 794,
                  "nodeType": "Return",
                  "src": "15696:59:0"
                }
              ]
            },
            "documentation": "@dev Compute the start and end of the dispute's current or next appeal period, if possible.\r\n @param _disputeID ID of the dispute.\r\n @return The start and end of the period.\r",
            "id": 796,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appealPeriod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 776,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "15569:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15569:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15568:17:0"
            },
            "returnParameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 779,
                  "name": "start",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "15606:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15606:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 781,
                  "name": "end",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "15618:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 780,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15618:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15605:22:0"
            },
            "scope": 797,
            "src": "15547:216:0",
            "stateMutability": "view",
            "superFunction": 273,
            "visibility": "public"
          }
        ],
        "scope": 798,
        "src": "7059:8709:0"
      }
    ],
    "src": "128:15640:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "605": {
      "events": {},
      "links": {},
      "address": "0x195e42c9785e4d19514cBD390825715295633706",
      "transactionHash": "0xcca6d5f9c85dae4fbd5d64368e019eacfef20adec96b2a9ad1d017632e93b192"
    },
    "619": {
      "events": {},
      "links": {},
      "address": "0x0a8E636a3fB3D7501Cd4d7643007468fa8c19fE4",
      "transactionHash": "0x9cdf0a595618e7b6d627dbf14d34e1cc2e8ec5ad7623bde84646d900d5296371"
    },
    "628": {
      "events": {},
      "links": {},
      "address": "0x195e42c9785e4d19514cBD390825715295633706",
      "transactionHash": "0xcca6d5f9c85dae4fbd5d64368e019eacfef20adec96b2a9ad1d017632e93b192"
    },
    "630": {
      "events": {},
      "links": {},
      "address": "0x0a8E636a3fB3D7501Cd4d7643007468fa8c19fE4",
      "transactionHash": "0x9cdf0a595618e7b6d627dbf14d34e1cc2e8ec5ad7623bde84646d900d5296371"
    },
    "631": {
      "events": {},
      "links": {},
      "address": "0xD1014814EE34bB7baEF2ca8A235Fd2bEb34647Ac",
      "transactionHash": "0x5ce96ac9ccd98d34a48c2b5c476b6d25ec8a36592e86073493917df8897b470f"
    },
    "639": {
      "events": {},
      "links": {},
      "address": "0x20ebD0d7670aC81F9aF96002659C0ddF89d1710C",
      "transactionHash": "0xc13f7063c1ff58297b6d6cea13de95fd9cd5a116a746a722d037ff455719f82c"
    }
  },
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-10-17T15:30:30.539Z",
  "devdoc": {
    "methods": {
      "appeal(uint256,bytes)": {
        "details": "Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\r",
        "params": {
          "_disputeID": "ID of the dispute to be appealed.\r",
          "_extraData": "Can be used to give extra info on the appeal.\r"
        }
      },
      "appealCost(uint256,bytes)": {
        "details": "Cost of appeal. If appeal is not possible, it's a high value which can never be paid.\r",
        "params": {
          "_disputeID": "ID of the dispute to be appealed.\r",
          "_extraData": "Not used by this contract.\r"
        },
        "return": "fee Amount to be paid.\r"
      },
      "appealPeriod(uint256)": {
        "details": "Compute the start and end of the dispute's current or next appeal period, if possible.\r",
        "params": {
          "_disputeID": "ID of the dispute.\r"
        },
        "return": "The start and end of the period.\r"
      },
      "arbitrationCost(bytes)": {
        "details": "Cost of arbitration. Accessor to arbitrationPrice.\r",
        "params": {
          "_extraData": "Not used by this contract.\r"
        },
        "return": "fee Amount to be paid.\r"
      },
      "changeAppealFee(uint256,uint256)": {
        "details": "Change the appeal fee of a dispute.\r",
        "params": {
          "_appealCost": "The new cost to appeal this ruling.\r",
          "_disputeID": "The ID of the dispute to update.\r"
        }
      },
      "constructor": {
        "details": "Constructor. Set the initial arbitration price.\r",
        "params": {
          "_arbitrationPrice": "Amount to be paid for arbitration.\r"
        }
      },
      "createDispute(uint256,bytes)": {
        "details": "Create a dispute. Must be called by the arbitrable contract.\r Must be paid at least arbitrationCost().\r",
        "params": {
          "_choices": "Amount of choices the arbitrator can make in this dispute. When ruling <= choices.\r",
          "_extraData": "Can be used to give additional info on the dispute to be created.\r"
        },
        "return": "disputeID ID of the dispute created.\r"
      },
      "currentRuling(uint256)": {
        "details": "Return the ruling of a dispute.\r",
        "params": {
          "_disputeID": "ID of the dispute.\r"
        },
        "return": "ruling The ruling which have been given or which would be given if no appeals are raised.\r"
      },
      "disputeStatus(uint256)": {
        "details": "Return the status of a dispute (in the sense of ERC792, not the Dispute property).\r",
        "params": {
          "_disputeID": "ID of the dispute to rule.\r"
        },
        "return": "status The status of the dispute.\r"
      },
      "executeRuling(uint256)": {
        "details": "Execute the ruling of a dispute after the appeal period has passed. UNTRUSTED.\r",
        "params": {
          "_disputeID": "ID of the dispute to execute.\r"
        }
      },
      "giveAppealableRuling(uint256,uint256,uint256,uint256)": {
        "details": "Give an appealable ruling.\r",
        "params": {
          "_appealCost": "The cost of appeal.\r",
          "_disputeID": "ID of the dispute to rule.\r",
          "_ruling": "Ruling given by the arbitrator. Note that 0 means \"Not able/wanting to make a decision\".\r",
          "_timeToAppeal": "The time to appeal the ruling.\r"
        }
      },
      "giveRuling(uint256,uint256)": {
        "details": "Give a ruling. UNTRUSTED.\r",
        "params": {
          "_disputeID": "ID of the dispute to rule.\r",
          "_ruling": "Ruling given by the arbitrator. Note that 0 means \"Not able/wanting to make a decision\".\r"
        }
      },
      "setArbitrationPrice(uint256)": {
        "details": "Set the arbitration price. Only callable by the owner.\r",
        "params": {
          "_arbitrationPrice": "Amount to be paid for arbitration.\r"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}